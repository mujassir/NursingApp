#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RMC.DataService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RMC")]
	public partial class RMCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertYear(Year instance);
    partial void UpdateYear(Year instance);
    partial void DeleteYear(Year instance);
    partial void InsertBenchmarkFilter(BenchmarkFilter instance);
    partial void UpdateBenchmarkFilter(BenchmarkFilter instance);
    partial void DeleteBenchmarkFilter(BenchmarkFilter instance);
    partial void InsertCategoryGroup(CategoryGroup instance);
    partial void UpdateCategoryGroup(CategoryGroup instance);
    partial void DeleteCategoryGroup(CategoryGroup instance);
    partial void InsertCategoryProfile(CategoryProfile instance);
    partial void UpdateCategoryProfile(CategoryProfile instance);
    partial void DeleteCategoryProfile(CategoryProfile instance);
    partial void InsertCognitiveCategory(CognitiveCategory instance);
    partial void UpdateCognitiveCategory(CognitiveCategory instance);
    partial void DeleteCognitiveCategory(CognitiveCategory instance);
    partial void InsertColumnName(ColumnName instance);
    partial void UpdateColumnName(ColumnName instance);
    partial void DeleteColumnName(ColumnName instance);
    partial void InsertContactUs(ContactUs instance);
    partial void UpdateContactUs(ContactUs instance);
    partial void DeleteContactUs(ContactUs instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertDataImportConfigLocation(DataImportConfigLocation instance);
    partial void UpdateDataImportConfigLocation(DataImportConfigLocation instance);
    partial void DeleteDataImportConfigLocation(DataImportConfigLocation instance);
    partial void InsertDynamicData(DynamicData instance);
    partial void UpdateDynamicData(DynamicData instance);
    partial void DeleteDynamicData(DynamicData instance);
    partial void InsertErrorLog(ErrorLog instance);
    partial void UpdateErrorLog(ErrorLog instance);
    partial void DeleteErrorLog(ErrorLog instance);
    partial void InsertHospitalDemographicInfo(HospitalDemographicInfo instance);
    partial void UpdateHospitalDemographicInfo(HospitalDemographicInfo instance);
    partial void DeleteHospitalDemographicInfo(HospitalDemographicInfo instance);
    partial void InsertHospitalInfo(HospitalInfo instance);
    partial void UpdateHospitalInfo(HospitalInfo instance);
    partial void DeleteHospitalInfo(HospitalInfo instance);
    partial void InsertHospitalType(HospitalType instance);
    partial void UpdateHospitalType(HospitalType instance);
    partial void DeleteHospitalType(HospitalType instance);
    partial void InsertHospitalUpload(HospitalUpload instance);
    partial void UpdateHospitalUpload(HospitalUpload instance);
    partial void DeleteHospitalUpload(HospitalUpload instance);
    partial void InsertLastLocation(LastLocation instance);
    partial void UpdateLastLocation(LastLocation instance);
    partial void DeleteLastLocation(LastLocation instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertLocationCategory(LocationCategory instance);
    partial void UpdateLocationCategory(LocationCategory instance);
    partial void DeleteLocationCategory(LocationCategory instance);
    partial void InsertMaintainControlState(MaintainControlState instance);
    partial void UpdateMaintainControlState(MaintainControlState instance);
    partial void DeleteMaintainControlState(MaintainControlState instance);
    partial void InsertMonth(Month instance);
    partial void UpdateMonth(Month instance);
    partial void DeleteMonth(Month instance);
    partial void InsertMultiUserDemographic(MultiUserDemographic instance);
    partial void UpdateMultiUserDemographic(MultiUserDemographic instance);
    partial void DeleteMultiUserDemographic(MultiUserDemographic instance);
    partial void InsertMultiUserHospital(MultiUserHospital instance);
    partial void UpdateMultiUserHospital(MultiUserHospital instance);
    partial void DeleteMultiUserHospital(MultiUserHospital instance);
    partial void InsertNationalDatabase(NationalDatabase instance);
    partial void UpdateNationalDatabase(NationalDatabase instance);
    partial void DeleteNationalDatabase(NationalDatabase instance);
    partial void InsertNationalDatabaseCategory(NationalDatabaseCategory instance);
    partial void UpdateNationalDatabaseCategory(NationalDatabaseCategory instance);
    partial void DeleteNationalDatabaseCategory(NationalDatabaseCategory instance);
    partial void InsertNotification(Notification instance);
    partial void UpdateNotification(Notification instance);
    partial void DeleteNotification(Notification instance);
    partial void InsertNursePDADetail(NursePDADetail instance);
    partial void UpdateNursePDADetail(NursePDADetail instance);
    partial void DeleteNursePDADetail(NursePDADetail instance);
    partial void InsertNursePDAInfo(NursePDAInfo instance);
    partial void UpdateNursePDAInfo(NursePDAInfo instance);
    partial void DeleteNursePDAInfo(NursePDAInfo instance);
    partial void InsertNursePDASpecialType(NursePDASpecialType instance);
    partial void UpdateNursePDASpecialType(NursePDASpecialType instance);
    partial void DeleteNursePDASpecialType(NursePDASpecialType instance);
    partial void InsertOwnerShipType(OwnerShipType instance);
    partial void UpdateOwnerShipType(OwnerShipType instance);
    partial void DeleteOwnerShipType(OwnerShipType instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertPharmacyType(PharmacyType instance);
    partial void UpdatePharmacyType(PharmacyType instance);
    partial void DeletePharmacyType(PharmacyType instance);
    partial void InsertProfileType(ProfileType instance);
    partial void UpdateProfileType(ProfileType instance);
    partial void DeleteProfileType(ProfileType instance);
    partial void InsertProfileUser(ProfileUser instance);
    partial void UpdateProfileUser(ProfileUser instance);
    partial void DeleteProfileUser(ProfileUser instance);
    partial void InsertRequestForType(RequestForType instance);
    partial void UpdateRequestForType(RequestForType instance);
    partial void DeleteRequestForType(RequestForType instance);
    partial void InsertResourceRequirement(ResourceRequirement instance);
    partial void UpdateResourceRequirement(ResourceRequirement instance);
    partial void DeleteResourceRequirement(ResourceRequirement instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertSubActivity(SubActivity instance);
    partial void UpdateSubActivity(SubActivity instance);
    partial void DeleteSubActivity(SubActivity instance);
    partial void InsertUnitType(UnitType instance);
    partial void UpdateUnitType(UnitType instance);
    partial void DeleteUnitType(UnitType instance);
    partial void InsertUserType(UserType instance);
    partial void UpdateUserType(UserType instance);
    partial void DeleteUserType(UserType instance);
    partial void InsertValidateFileField(ValidateFileField instance);
    partial void UpdateValidateFileField(ValidateFileField instance);
    partial void DeleteValidateFileField(ValidateFileField instance);
    partial void InsertValidation(Validation instance);
    partial void UpdateValidation(Validation instance);
    partial void DeleteValidation(Validation instance);
    partial void InsertValueAddedType(ValueAddedType instance);
    partial void UpdateValueAddedType(ValueAddedType instance);
    partial void DeleteValueAddedType(ValueAddedType instance);
    partial void InsertViewRequest(ViewRequest instance);
    partial void UpdateViewRequest(ViewRequest instance);
    partial void DeleteViewRequest(ViewRequest instance);
    partial void InsertUserInfo(UserInfo instance);
    partial void UpdateUserInfo(UserInfo instance);
    partial void DeleteUserInfo(UserInfo instance);
    partial void InsertActivitiesCategory(ActivitiesCategory instance);
    partial void UpdateActivitiesCategory(ActivitiesCategory instance);
    partial void DeleteActivitiesCategory(ActivitiesCategory instance);
    #endregion
		
		public RMCDataContext() : 
				base(global::RMC.DataService.Properties.Settings.Default.RMCConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RMCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RMCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RMCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RMCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<Year> Years
		{
			get
			{
				return this.GetTable<Year>();
			}
		}
		
		public System.Data.Linq.Table<BenchmarkFilter> BenchmarkFilters
		{
			get
			{
				return this.GetTable<BenchmarkFilter>();
			}
		}
		
		public System.Data.Linq.Table<CategoryGroup> CategoryGroups
		{
			get
			{
				return this.GetTable<CategoryGroup>();
			}
		}
		
		public System.Data.Linq.Table<CategoryProfile> CategoryProfiles
		{
			get
			{
				return this.GetTable<CategoryProfile>();
			}
		}
		
		public System.Data.Linq.Table<CognitiveCategory> CognitiveCategories
		{
			get
			{
				return this.GetTable<CognitiveCategory>();
			}
		}
		
		public System.Data.Linq.Table<ColumnName> ColumnNames
		{
			get
			{
				return this.GetTable<ColumnName>();
			}
		}
		
		public System.Data.Linq.Table<ContactUs> ContactUs
		{
			get
			{
				return this.GetTable<ContactUs>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<DataImportConfigLocation> DataImportConfigLocations
		{
			get
			{
				return this.GetTable<DataImportConfigLocation>();
			}
		}
		
		public System.Data.Linq.Table<DynamicData> DynamicDatas
		{
			get
			{
				return this.GetTable<DynamicData>();
			}
		}
		
		public System.Data.Linq.Table<ErrorLog> ErrorLogs
		{
			get
			{
				return this.GetTable<ErrorLog>();
			}
		}
		
		public System.Data.Linq.Table<HospitalDemographicInfo> HospitalDemographicInfos
		{
			get
			{
				return this.GetTable<HospitalDemographicInfo>();
			}
		}
		
		public System.Data.Linq.Table<HospitalInfo> HospitalInfos
		{
			get
			{
				return this.GetTable<HospitalInfo>();
			}
		}
		
		public System.Data.Linq.Table<HospitalType> HospitalTypes
		{
			get
			{
				return this.GetTable<HospitalType>();
			}
		}
		
		public System.Data.Linq.Table<HospitalUpload> HospitalUploads
		{
			get
			{
				return this.GetTable<HospitalUpload>();
			}
		}
		
		public System.Data.Linq.Table<LastLocation> LastLocations
		{
			get
			{
				return this.GetTable<LastLocation>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<LocationCategory> LocationCategories
		{
			get
			{
				return this.GetTable<LocationCategory>();
			}
		}
		
		public System.Data.Linq.Table<MaintainControlState> MaintainControlStates
		{
			get
			{
				return this.GetTable<MaintainControlState>();
			}
		}
		
		public System.Data.Linq.Table<Month> Months
		{
			get
			{
				return this.GetTable<Month>();
			}
		}
		
		public System.Data.Linq.Table<MultiUserDemographic> MultiUserDemographics
		{
			get
			{
				return this.GetTable<MultiUserDemographic>();
			}
		}
		
		public System.Data.Linq.Table<MultiUserHospital> MultiUserHospitals
		{
			get
			{
				return this.GetTable<MultiUserHospital>();
			}
		}
		
		public System.Data.Linq.Table<NationalDatabase> NationalDatabases
		{
			get
			{
				return this.GetTable<NationalDatabase>();
			}
		}
		
		public System.Data.Linq.Table<NationalDatabaseCategory> NationalDatabaseCategories
		{
			get
			{
				return this.GetTable<NationalDatabaseCategory>();
			}
		}
		
		public System.Data.Linq.Table<Notification> Notifications
		{
			get
			{
				return this.GetTable<Notification>();
			}
		}
		
		public System.Data.Linq.Table<NursePDADetail> NursePDADetails
		{
			get
			{
				return this.GetTable<NursePDADetail>();
			}
		}
		
		public System.Data.Linq.Table<NursePDAInfo> NursePDAInfos
		{
			get
			{
				return this.GetTable<NursePDAInfo>();
			}
		}
		
		public System.Data.Linq.Table<NursePDASpecialType> NursePDASpecialTypes
		{
			get
			{
				return this.GetTable<NursePDASpecialType>();
			}
		}
		
		public System.Data.Linq.Table<OwnerShipType> OwnerShipTypes
		{
			get
			{
				return this.GetTable<OwnerShipType>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<PharmacyType> PharmacyTypes
		{
			get
			{
				return this.GetTable<PharmacyType>();
			}
		}
		
		public System.Data.Linq.Table<ProfileType> ProfileTypes
		{
			get
			{
				return this.GetTable<ProfileType>();
			}
		}
		
		public System.Data.Linq.Table<ProfileUser> ProfileUsers
		{
			get
			{
				return this.GetTable<ProfileUser>();
			}
		}
		
		public System.Data.Linq.Table<RequestForType> RequestForTypes
		{
			get
			{
				return this.GetTable<RequestForType>();
			}
		}
		
		public System.Data.Linq.Table<ResourceRequirement> ResourceRequirements
		{
			get
			{
				return this.GetTable<ResourceRequirement>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<SubActivity> SubActivities
		{
			get
			{
				return this.GetTable<SubActivity>();
			}
		}
		
		public System.Data.Linq.Table<UnitType> UnitTypes
		{
			get
			{
				return this.GetTable<UnitType>();
			}
		}
		
		public System.Data.Linq.Table<UserType> UserTypes
		{
			get
			{
				return this.GetTable<UserType>();
			}
		}
		
		public System.Data.Linq.Table<ValidateFileField> ValidateFileFields
		{
			get
			{
				return this.GetTable<ValidateFileField>();
			}
		}
		
		public System.Data.Linq.Table<Validation> Validations
		{
			get
			{
				return this.GetTable<Validation>();
			}
		}
		
		public System.Data.Linq.Table<ValueAddedType> ValueAddedTypes
		{
			get
			{
				return this.GetTable<ValueAddedType>();
			}
		}
		
		public System.Data.Linq.Table<ViewRequest> ViewRequests
		{
			get
			{
				return this.GetTable<ViewRequest>();
			}
		}
		
		public System.Data.Linq.Table<UserInfo> UserInfos
		{
			get
			{
				return this.GetTable<UserInfo>();
			}
		}
		
		public System.Data.Linq.Table<ActivitiesCategory> ActivitiesCategories
		{
			get
			{
				return this.GetTable<ActivitiesCategory>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetLocationName")]
		public ISingleResult<GetLocationNameResult> GetLocationName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationID", DbType="Int")] System.Nullable<int> locationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), locationID);
			return ((ISingleResult<GetLocationNameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetLastLocationName")]
		public ISingleResult<GetLastLocationNameResult> GetLastLocationName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLocationID", DbType="Int")] System.Nullable<int> lastLocationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastLocationID);
			return ((ISingleResult<GetLastLocationNameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRenameLastLocation")]
		public ISingleResult<GetRenameLastLocationResult> GetRenameLastLocation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLocationID", DbType="Int")] System.Nullable<int> lastLocationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastLocationID);
			return ((ISingleResult<GetRenameLastLocationResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activities")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityID;
		
		private string _Activity1;
		
		private int _ValidateID;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityIDChanging(int value);
    partial void OnActivityIDChanged();
    partial void OnActivity1Changing(string value);
    partial void OnActivity1Changed();
    partial void OnValidateIDChanging(int value);
    partial void OnValidateIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Activity()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Activity", Storage="_Activity1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Activity1
		{
			get
			{
				return this._Activity1;
			}
			set
			{
				if ((this._Activity1 != value))
				{
					this.OnActivity1Changing(value);
					this.SendPropertyChanging();
					this._Activity1 = value;
					this.SendPropertyChanged("Activity1");
					this.OnActivity1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ValidateID
		{
			get
			{
				return this._ValidateID;
			}
			set
			{
				if ((this._ValidateID != value))
				{
					this.OnValidateIDChanging(value);
					this.SendPropertyChanging();
					this._ValidateID = value;
					this.SendPropertyChanged("ValidateID");
					this.OnValidateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Years")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Year : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _YearID;
		
		private string _Year1;
		
		private int _HospitalDemographicID;
		
		private EntitySet<Month> _Months;
		
		private EntityRef<HospitalDemographicInfo> _HospitalDemographicInfo;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYearIDChanging(int value);
    partial void OnYearIDChanged();
    partial void OnYear1Changing(string value);
    partial void OnYear1Changed();
    partial void OnHospitalDemographicIDChanging(int value);
    partial void OnHospitalDemographicIDChanged();
    #endregion
		
		public Year()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int YearID
		{
			get
			{
				return this._YearID;
			}
			set
			{
				if ((this._YearID != value))
				{
					this.OnYearIDChanging(value);
					this.SendPropertyChanging();
					this._YearID = value;
					this.SendPropertyChanged("YearID");
					this.OnYearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Year", Storage="_Year1", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Year1
		{
			get
			{
				return this._Year1;
			}
			set
			{
				if ((this._Year1 != value))
				{
					this.OnYear1Changing(value);
					this.SendPropertyChanging();
					this._Year1 = value;
					this.SendPropertyChanged("Year1");
					this.OnYear1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalDemographicID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int HospitalDemographicID
		{
			get
			{
				return this._HospitalDemographicID;
			}
			set
			{
				if ((this._HospitalDemographicID != value))
				{
					if (this._HospitalDemographicInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHospitalDemographicIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalDemographicID = value;
					this.SendPropertyChanged("HospitalDemographicID");
					this.OnHospitalDemographicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_Month", Storage="_Months", ThisKey="YearID", OtherKey="YearID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Month> Months
		{
			get
			{
				if ((this.serializing 
							&& (this._Months.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Months;
			}
			set
			{
				this._Months.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalDemographicInfo_Year", Storage="_HospitalDemographicInfo", ThisKey="HospitalDemographicID", OtherKey="HospitalDemographicID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HospitalDemographicInfo HospitalDemographicInfo
		{
			get
			{
				return this._HospitalDemographicInfo.Entity;
			}
			set
			{
				HospitalDemographicInfo previousValue = this._HospitalDemographicInfo.Entity;
				if (((previousValue != value) 
							|| (this._HospitalDemographicInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HospitalDemographicInfo.Entity = null;
						previousValue.Years.Remove(this);
					}
					this._HospitalDemographicInfo.Entity = value;
					if ((value != null))
					{
						value.Years.Add(this);
						this._HospitalDemographicID = value.HospitalDemographicID;
					}
					else
					{
						this._HospitalDemographicID = default(int);
					}
					this.SendPropertyChanged("HospitalDemographicInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Months(Month entity)
		{
			this.SendPropertyChanging();
			entity.Year = this;
		}
		
		private void detach_Months(Month entity)
		{
			this.SendPropertyChanging();
			entity.Year = null;
		}
		
		private void Initialize()
		{
			this._Months = new EntitySet<Month>(new Action<Month>(this.attach_Months), new Action<Month>(this.detach_Months));
			this._HospitalDemographicInfo = default(EntityRef<HospitalDemographicInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BenchmarkFilter")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BenchmarkFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FilterId;
		
		private System.Nullable<int> _BedsInUnitFrom;
		
		private System.Nullable<int> _optBedsInUnitFrom;
		
		private System.Nullable<int> _BedsInUnitTo;
		
		private System.Nullable<int> _optBedsInUnitTo;
		
		private System.Nullable<double> _BudgetedPatientFrom;
		
		private System.Nullable<int> _optBudgetedPatientFrom;
		
		private System.Nullable<double> _BudgetedPatientTo;
		
		private System.Nullable<int> _optBudgetedPatientTo;
		
		private System.Nullable<int> _ElectronicDocumentationFrom;
		
		private System.Nullable<int> _optElectronicDocumentationFrom;
		
		private System.Nullable<int> _ElectronicDocumentationTo;
		
		private System.Nullable<int> _optElectronicDocumentationTo;
		
		private System.Nullable<int> _DocByException;
		
		private string _UnitType;
		
		private string _PharmacyType;
		
		private string _HospitalType;
		
		private string _ConfigurationName;
		
		private System.Nullable<int> _HospitalSizeFrom;
		
		private System.Nullable<int> _optHospitalSizeFrom;
		
		private System.Nullable<int> _HospitalSizeTo;
		
		private System.Nullable<int> _optHospitalSizeTo;
		
		private System.Nullable<int> _DataPointsFrom;
		
		private System.Nullable<int> _optDataPointsFrom;
		
		private System.Nullable<int> _DataPointsTo;
		
		private System.Nullable<int> _optDataPointsTo;
		
		private System.Nullable<int> _CountryId;
		
		private System.Nullable<int> _StateId;
		
		private string _FilterName;
		
		private bool _Share;
		
		private string _Comment;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _HospitalUnitIds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFilterIdChanging(int value);
    partial void OnFilterIdChanged();
    partial void OnBedsInUnitFromChanging(System.Nullable<int> value);
    partial void OnBedsInUnitFromChanged();
    partial void OnoptBedsInUnitFromChanging(System.Nullable<int> value);
    partial void OnoptBedsInUnitFromChanged();
    partial void OnBedsInUnitToChanging(System.Nullable<int> value);
    partial void OnBedsInUnitToChanged();
    partial void OnoptBedsInUnitToChanging(System.Nullable<int> value);
    partial void OnoptBedsInUnitToChanged();
    partial void OnBudgetedPatientFromChanging(System.Nullable<double> value);
    partial void OnBudgetedPatientFromChanged();
    partial void OnoptBudgetedPatientFromChanging(System.Nullable<int> value);
    partial void OnoptBudgetedPatientFromChanged();
    partial void OnBudgetedPatientToChanging(System.Nullable<double> value);
    partial void OnBudgetedPatientToChanged();
    partial void OnoptBudgetedPatientToChanging(System.Nullable<int> value);
    partial void OnoptBudgetedPatientToChanged();
    partial void OnElectronicDocumentationFromChanging(System.Nullable<int> value);
    partial void OnElectronicDocumentationFromChanged();
    partial void OnoptElectronicDocumentationFromChanging(System.Nullable<int> value);
    partial void OnoptElectronicDocumentationFromChanged();
    partial void OnElectronicDocumentationToChanging(System.Nullable<int> value);
    partial void OnElectronicDocumentationToChanged();
    partial void OnoptElectronicDocumentationToChanging(System.Nullable<int> value);
    partial void OnoptElectronicDocumentationToChanged();
    partial void OnDocByExceptionChanging(System.Nullable<int> value);
    partial void OnDocByExceptionChanged();
    partial void OnUnitTypeChanging(string value);
    partial void OnUnitTypeChanged();
    partial void OnPharmacyTypeChanging(string value);
    partial void OnPharmacyTypeChanged();
    partial void OnHospitalTypeChanging(string value);
    partial void OnHospitalTypeChanged();
    partial void OnConfigurationNameChanging(string value);
    partial void OnConfigurationNameChanged();
    partial void OnHospitalSizeFromChanging(System.Nullable<int> value);
    partial void OnHospitalSizeFromChanged();
    partial void OnoptHospitalSizeFromChanging(System.Nullable<int> value);
    partial void OnoptHospitalSizeFromChanged();
    partial void OnHospitalSizeToChanging(System.Nullable<int> value);
    partial void OnHospitalSizeToChanged();
    partial void OnoptHospitalSizeToChanging(System.Nullable<int> value);
    partial void OnoptHospitalSizeToChanged();
    partial void OnDataPointsFromChanging(System.Nullable<int> value);
    partial void OnDataPointsFromChanged();
    partial void OnoptDataPointsFromChanging(System.Nullable<int> value);
    partial void OnoptDataPointsFromChanged();
    partial void OnDataPointsToChanging(System.Nullable<int> value);
    partial void OnDataPointsToChanged();
    partial void OnoptDataPointsToChanging(System.Nullable<int> value);
    partial void OnoptDataPointsToChanged();
    partial void OnCountryIdChanging(System.Nullable<int> value);
    partial void OnCountryIdChanged();
    partial void OnStateIdChanging(System.Nullable<int> value);
    partial void OnStateIdChanged();
    partial void OnFilterNameChanging(string value);
    partial void OnFilterNameChanged();
    partial void OnShareChanging(bool value);
    partial void OnShareChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnHospitalUnitIdsChanging(string value);
    partial void OnHospitalUnitIdsChanged();
    #endregion
		
		public BenchmarkFilter()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FilterId
		{
			get
			{
				return this._FilterId;
			}
			set
			{
				if ((this._FilterId != value))
				{
					this.OnFilterIdChanging(value);
					this.SendPropertyChanging();
					this._FilterId = value;
					this.SendPropertyChanged("FilterId");
					this.OnFilterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedsInUnitFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> BedsInUnitFrom
		{
			get
			{
				return this._BedsInUnitFrom;
			}
			set
			{
				if ((this._BedsInUnitFrom != value))
				{
					this.OnBedsInUnitFromChanging(value);
					this.SendPropertyChanging();
					this._BedsInUnitFrom = value;
					this.SendPropertyChanged("BedsInUnitFrom");
					this.OnBedsInUnitFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optBedsInUnitFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> optBedsInUnitFrom
		{
			get
			{
				return this._optBedsInUnitFrom;
			}
			set
			{
				if ((this._optBedsInUnitFrom != value))
				{
					this.OnoptBedsInUnitFromChanging(value);
					this.SendPropertyChanging();
					this._optBedsInUnitFrom = value;
					this.SendPropertyChanged("optBedsInUnitFrom");
					this.OnoptBedsInUnitFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedsInUnitTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> BedsInUnitTo
		{
			get
			{
				return this._BedsInUnitTo;
			}
			set
			{
				if ((this._BedsInUnitTo != value))
				{
					this.OnBedsInUnitToChanging(value);
					this.SendPropertyChanging();
					this._BedsInUnitTo = value;
					this.SendPropertyChanged("BedsInUnitTo");
					this.OnBedsInUnitToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optBedsInUnitTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> optBedsInUnitTo
		{
			get
			{
				return this._optBedsInUnitTo;
			}
			set
			{
				if ((this._optBedsInUnitTo != value))
				{
					this.OnoptBedsInUnitToChanging(value);
					this.SendPropertyChanging();
					this._optBedsInUnitTo = value;
					this.SendPropertyChanged("optBedsInUnitTo");
					this.OnoptBedsInUnitToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetedPatientFrom", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> BudgetedPatientFrom
		{
			get
			{
				return this._BudgetedPatientFrom;
			}
			set
			{
				if ((this._BudgetedPatientFrom != value))
				{
					this.OnBudgetedPatientFromChanging(value);
					this.SendPropertyChanging();
					this._BudgetedPatientFrom = value;
					this.SendPropertyChanged("BudgetedPatientFrom");
					this.OnBudgetedPatientFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optBudgetedPatientFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> optBudgetedPatientFrom
		{
			get
			{
				return this._optBudgetedPatientFrom;
			}
			set
			{
				if ((this._optBudgetedPatientFrom != value))
				{
					this.OnoptBudgetedPatientFromChanging(value);
					this.SendPropertyChanging();
					this._optBudgetedPatientFrom = value;
					this.SendPropertyChanged("optBudgetedPatientFrom");
					this.OnoptBudgetedPatientFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetedPatientTo", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<double> BudgetedPatientTo
		{
			get
			{
				return this._BudgetedPatientTo;
			}
			set
			{
				if ((this._BudgetedPatientTo != value))
				{
					this.OnBudgetedPatientToChanging(value);
					this.SendPropertyChanging();
					this._BudgetedPatientTo = value;
					this.SendPropertyChanged("BudgetedPatientTo");
					this.OnBudgetedPatientToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optBudgetedPatientTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> optBudgetedPatientTo
		{
			get
			{
				return this._optBudgetedPatientTo;
			}
			set
			{
				if ((this._optBudgetedPatientTo != value))
				{
					this.OnoptBudgetedPatientToChanging(value);
					this.SendPropertyChanging();
					this._optBudgetedPatientTo = value;
					this.SendPropertyChanged("optBudgetedPatientTo");
					this.OnoptBudgetedPatientToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectronicDocumentationFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> ElectronicDocumentationFrom
		{
			get
			{
				return this._ElectronicDocumentationFrom;
			}
			set
			{
				if ((this._ElectronicDocumentationFrom != value))
				{
					this.OnElectronicDocumentationFromChanging(value);
					this.SendPropertyChanging();
					this._ElectronicDocumentationFrom = value;
					this.SendPropertyChanged("ElectronicDocumentationFrom");
					this.OnElectronicDocumentationFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optElectronicDocumentationFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> optElectronicDocumentationFrom
		{
			get
			{
				return this._optElectronicDocumentationFrom;
			}
			set
			{
				if ((this._optElectronicDocumentationFrom != value))
				{
					this.OnoptElectronicDocumentationFromChanging(value);
					this.SendPropertyChanging();
					this._optElectronicDocumentationFrom = value;
					this.SendPropertyChanged("optElectronicDocumentationFrom");
					this.OnoptElectronicDocumentationFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectronicDocumentationTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> ElectronicDocumentationTo
		{
			get
			{
				return this._ElectronicDocumentationTo;
			}
			set
			{
				if ((this._ElectronicDocumentationTo != value))
				{
					this.OnElectronicDocumentationToChanging(value);
					this.SendPropertyChanging();
					this._ElectronicDocumentationTo = value;
					this.SendPropertyChanged("ElectronicDocumentationTo");
					this.OnElectronicDocumentationToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optElectronicDocumentationTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> optElectronicDocumentationTo
		{
			get
			{
				return this._optElectronicDocumentationTo;
			}
			set
			{
				if ((this._optElectronicDocumentationTo != value))
				{
					this.OnoptElectronicDocumentationToChanging(value);
					this.SendPropertyChanging();
					this._optElectronicDocumentationTo = value;
					this.SendPropertyChanged("optElectronicDocumentationTo");
					this.OnoptElectronicDocumentationToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocByException", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<int> DocByException
		{
			get
			{
				return this._DocByException;
			}
			set
			{
				if ((this._DocByException != value))
				{
					this.OnDocByExceptionChanging(value);
					this.SendPropertyChanging();
					this._DocByException = value;
					this.SendPropertyChanged("DocByException");
					this.OnDocByExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitType", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string UnitType
		{
			get
			{
				return this._UnitType;
			}
			set
			{
				if ((this._UnitType != value))
				{
					this.OnUnitTypeChanging(value);
					this.SendPropertyChanging();
					this._UnitType = value;
					this.SendPropertyChanged("UnitType");
					this.OnUnitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyType", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string PharmacyType
		{
			get
			{
				return this._PharmacyType;
			}
			set
			{
				if ((this._PharmacyType != value))
				{
					this.OnPharmacyTypeChanging(value);
					this.SendPropertyChanging();
					this._PharmacyType = value;
					this.SendPropertyChanged("PharmacyType");
					this.OnPharmacyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalType", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string HospitalType
		{
			get
			{
				return this._HospitalType;
			}
			set
			{
				if ((this._HospitalType != value))
				{
					this.OnHospitalTypeChanging(value);
					this.SendPropertyChanging();
					this._HospitalType = value;
					this.SendPropertyChanged("HospitalType");
					this.OnHospitalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigurationName", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string ConfigurationName
		{
			get
			{
				return this._ConfigurationName;
			}
			set
			{
				if ((this._ConfigurationName != value))
				{
					this.OnConfigurationNameChanging(value);
					this.SendPropertyChanging();
					this._ConfigurationName = value;
					this.SendPropertyChanged("ConfigurationName");
					this.OnConfigurationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalSizeFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> HospitalSizeFrom
		{
			get
			{
				return this._HospitalSizeFrom;
			}
			set
			{
				if ((this._HospitalSizeFrom != value))
				{
					this.OnHospitalSizeFromChanging(value);
					this.SendPropertyChanging();
					this._HospitalSizeFrom = value;
					this.SendPropertyChanged("HospitalSizeFrom");
					this.OnHospitalSizeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optHospitalSizeFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> optHospitalSizeFrom
		{
			get
			{
				return this._optHospitalSizeFrom;
			}
			set
			{
				if ((this._optHospitalSizeFrom != value))
				{
					this.OnoptHospitalSizeFromChanging(value);
					this.SendPropertyChanging();
					this._optHospitalSizeFrom = value;
					this.SendPropertyChanged("optHospitalSizeFrom");
					this.OnoptHospitalSizeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalSizeTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> HospitalSizeTo
		{
			get
			{
				return this._HospitalSizeTo;
			}
			set
			{
				if ((this._HospitalSizeTo != value))
				{
					this.OnHospitalSizeToChanging(value);
					this.SendPropertyChanging();
					this._HospitalSizeTo = value;
					this.SendPropertyChanged("HospitalSizeTo");
					this.OnHospitalSizeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optHospitalSizeTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<int> optHospitalSizeTo
		{
			get
			{
				return this._optHospitalSizeTo;
			}
			set
			{
				if ((this._optHospitalSizeTo != value))
				{
					this.OnoptHospitalSizeToChanging(value);
					this.SendPropertyChanging();
					this._optHospitalSizeTo = value;
					this.SendPropertyChanged("optHospitalSizeTo");
					this.OnoptHospitalSizeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPointsFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<int> DataPointsFrom
		{
			get
			{
				return this._DataPointsFrom;
			}
			set
			{
				if ((this._DataPointsFrom != value))
				{
					this.OnDataPointsFromChanging(value);
					this.SendPropertyChanging();
					this._DataPointsFrom = value;
					this.SendPropertyChanged("DataPointsFrom");
					this.OnDataPointsFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optDataPointsFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<int> optDataPointsFrom
		{
			get
			{
				return this._optDataPointsFrom;
			}
			set
			{
				if ((this._optDataPointsFrom != value))
				{
					this.OnoptDataPointsFromChanging(value);
					this.SendPropertyChanging();
					this._optDataPointsFrom = value;
					this.SendPropertyChanged("optDataPointsFrom");
					this.OnoptDataPointsFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPointsTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<int> DataPointsTo
		{
			get
			{
				return this._DataPointsTo;
			}
			set
			{
				if ((this._DataPointsTo != value))
				{
					this.OnDataPointsToChanging(value);
					this.SendPropertyChanging();
					this._DataPointsTo = value;
					this.SendPropertyChanged("DataPointsTo");
					this.OnDataPointsToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optDataPointsTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<int> optDataPointsTo
		{
			get
			{
				return this._optDataPointsTo;
			}
			set
			{
				if ((this._optDataPointsTo != value))
				{
					this.OnoptDataPointsToChanging(value);
					this.SendPropertyChanging();
					this._optDataPointsTo = value;
					this.SendPropertyChanged("optDataPointsTo");
					this.OnoptDataPointsToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<int> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterName", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public string FilterName
		{
			get
			{
				return this._FilterName;
			}
			set
			{
				if ((this._FilterName != value))
				{
					this.OnFilterNameChanging(value);
					this.SendPropertyChanging();
					this._FilterName = value;
					this.SendPropertyChanged("FilterName");
					this.OnFilterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Share", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public bool Share
		{
			get
			{
				return this._Share;
			}
			set
			{
				if ((this._Share != value))
				{
					this.OnShareChanging(value);
					this.SendPropertyChanging();
					this._Share = value;
					this.SendPropertyChanged("Share");
					this.OnShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalUnitIds", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public string HospitalUnitIds
		{
			get
			{
				return this._HospitalUnitIds;
			}
			set
			{
				if ((this._HospitalUnitIds != value))
				{
					this.OnHospitalUnitIdsChanging(value);
					this.SendPropertyChanging();
					this._HospitalUnitIds = value;
					this.SendPropertyChanged("HospitalUnitIds");
					this.OnHospitalUnitIdsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryGroup")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CategoryGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryGroupID;
		
		private string _CategoryGroup1;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryGroupIDChanging(int value);
    partial void OnCategoryGroupIDChanged();
    partial void OnCategoryGroup1Changing(string value);
    partial void OnCategoryGroup1Changed();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public CategoryGroup()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CategoryGroupID
		{
			get
			{
				return this._CategoryGroupID;
			}
			set
			{
				if ((this._CategoryGroupID != value))
				{
					this.OnCategoryGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryGroupID = value;
					this.SendPropertyChanged("CategoryGroupID");
					this.OnCategoryGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CategoryGroup", Storage="_CategoryGroup1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CategoryGroup1
		{
			get
			{
				return this._CategoryGroup1;
			}
			set
			{
				if ((this._CategoryGroup1 != value))
				{
					this.OnCategoryGroup1Changing(value);
					this.SendPropertyChanging();
					this._CategoryGroup1 = value;
					this.SendPropertyChanged("CategoryGroup1");
					this.OnCategoryGroup1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryProfile")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CategoryProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryProfileID;
		
		private string _CategoryProfileName;
		
		private int _ProfileTypeID;
		
		private int _ValidationID;
		
		private System.Nullable<int> _CategoryAssignmentID;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private EntityRef<ProfileType> _ProfileType;
		
		private EntityRef<Validation> _Validation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryProfileIDChanging(int value);
    partial void OnCategoryProfileIDChanged();
    partial void OnCategoryProfileNameChanging(string value);
    partial void OnCategoryProfileNameChanged();
    partial void OnProfileTypeIDChanging(int value);
    partial void OnProfileTypeIDChanged();
    partial void OnValidationIDChanging(int value);
    partial void OnValidationIDChanged();
    partial void OnCategoryAssignmentIDChanging(System.Nullable<int> value);
    partial void OnCategoryAssignmentIDChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public CategoryProfile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CategoryProfileID
		{
			get
			{
				return this._CategoryProfileID;
			}
			set
			{
				if ((this._CategoryProfileID != value))
				{
					this.OnCategoryProfileIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryProfileID = value;
					this.SendPropertyChanged("CategoryProfileID");
					this.OnCategoryProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryProfileName", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CategoryProfileName
		{
			get
			{
				return this._CategoryProfileName;
			}
			set
			{
				if ((this._CategoryProfileName != value))
				{
					this.OnCategoryProfileNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryProfileName = value;
					this.SendPropertyChanged("CategoryProfileName");
					this.OnCategoryProfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ProfileTypeID
		{
			get
			{
				return this._ProfileTypeID;
			}
			set
			{
				if ((this._ProfileTypeID != value))
				{
					if (this._ProfileType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfileTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileTypeID = value;
					this.SendPropertyChanged("ProfileTypeID");
					this.OnProfileTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int ValidationID
		{
			get
			{
				return this._ValidationID;
			}
			set
			{
				if ((this._ValidationID != value))
				{
					if (this._Validation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidationIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationID = value;
					this.SendPropertyChanged("ValidationID");
					this.OnValidationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryAssignmentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> CategoryAssignmentID
		{
			get
			{
				return this._CategoryAssignmentID;
			}
			set
			{
				if ((this._CategoryAssignmentID != value))
				{
					this.OnCategoryAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryAssignmentID = value;
					this.SendPropertyChanged("CategoryAssignmentID");
					this.OnCategoryAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfileType_CategoryProfile", Storage="_ProfileType", ThisKey="ProfileTypeID", OtherKey="ProfileTypeID", IsForeignKey=true)]
		public ProfileType ProfileType
		{
			get
			{
				return this._ProfileType.Entity;
			}
			set
			{
				ProfileType previousValue = this._ProfileType.Entity;
				if (((previousValue != value) 
							|| (this._ProfileType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProfileType.Entity = null;
						previousValue.CategoryProfiles.Remove(this);
					}
					this._ProfileType.Entity = value;
					if ((value != null))
					{
						value.CategoryProfiles.Add(this);
						this._ProfileTypeID = value.ProfileTypeID;
					}
					else
					{
						this._ProfileTypeID = default(int);
					}
					this.SendPropertyChanged("ProfileType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Validation_CategoryProfile", Storage="_Validation", ThisKey="ValidationID", OtherKey="ValidationID", IsForeignKey=true)]
		public Validation Validation
		{
			get
			{
				return this._Validation.Entity;
			}
			set
			{
				Validation previousValue = this._Validation.Entity;
				if (((previousValue != value) 
							|| (this._Validation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Validation.Entity = null;
						previousValue.CategoryProfiles.Remove(this);
					}
					this._Validation.Entity = value;
					if ((value != null))
					{
						value.CategoryProfiles.Add(this);
						this._ValidationID = value.ValidationID;
					}
					else
					{
						this._ValidationID = default(int);
					}
					this.SendPropertyChanged("Validation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ProfileType = default(EntityRef<ProfileType>);
			this._Validation = default(EntityRef<Validation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CognitiveCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CognitiveCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CognitiveCategoryID;
		
		private string _CognitiveCategoryText;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCognitiveCategoryIDChanging(int value);
    partial void OnCognitiveCategoryIDChanged();
    partial void OnCognitiveCategoryTextChanging(string value);
    partial void OnCognitiveCategoryTextChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public CognitiveCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CognitiveCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CognitiveCategoryID
		{
			get
			{
				return this._CognitiveCategoryID;
			}
			set
			{
				if ((this._CognitiveCategoryID != value))
				{
					this.OnCognitiveCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CognitiveCategoryID = value;
					this.SendPropertyChanged("CognitiveCategoryID");
					this.OnCognitiveCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CognitiveCategoryText", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CognitiveCategoryText
		{
			get
			{
				return this._CognitiveCategoryText;
			}
			set
			{
				if ((this._CognitiveCategoryText != value))
				{
					this.OnCognitiveCategoryTextChanging(value);
					this.SendPropertyChanging();
					this._CognitiveCategoryText = value;
					this.SendPropertyChanged("CognitiveCategoryText");
					this.OnCognitiveCategoryTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ColumnNames")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ColumnName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ColumnID;
		
		private string _ColumnName1;
		
		private string _TableName;
		
		private EntitySet<DynamicData> _DynamicDatas;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnColumnIDChanging(int value);
    partial void OnColumnIDChanged();
    partial void OnColumnName1Changing(string value);
    partial void OnColumnName1Changed();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    #endregion
		
		public ColumnName()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ColumnID
		{
			get
			{
				return this._ColumnID;
			}
			set
			{
				if ((this._ColumnID != value))
				{
					this.OnColumnIDChanging(value);
					this.SendPropertyChanging();
					this._ColumnID = value;
					this.SendPropertyChanged("ColumnID");
					this.OnColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ColumnName", Storage="_ColumnName1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ColumnName1
		{
			get
			{
				return this._ColumnName1;
			}
			set
			{
				if ((this._ColumnName1 != value))
				{
					this.OnColumnName1Changing(value);
					this.SendPropertyChanging();
					this._ColumnName1 = value;
					this.SendPropertyChanged("ColumnName1");
					this.OnColumnName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ColumnName_DynamicData", Storage="_DynamicDatas", ThisKey="ColumnID", OtherKey="ColumnID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<DynamicData> DynamicDatas
		{
			get
			{
				if ((this.serializing 
							&& (this._DynamicDatas.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DynamicDatas;
			}
			set
			{
				this._DynamicDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DynamicDatas(DynamicData entity)
		{
			this.SendPropertyChanging();
			entity.ColumnName = this;
		}
		
		private void detach_DynamicDatas(DynamicData entity)
		{
			this.SendPropertyChanging();
			entity.ColumnName = null;
		}
		
		private void Initialize()
		{
			this._DynamicDatas = new EntitySet<DynamicData>(new Action<DynamicData>(this.attach_DynamicDatas), new Action<DynamicData>(this.detach_DynamicDatas));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactUs")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ContactUs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactUsID;
		
		private int _SenderID;
		
		private string _Message;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactUsIDChanging(int value);
    partial void OnContactUsIDChanged();
    partial void OnSenderIDChanging(int value);
    partial void OnSenderIDChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ContactUs()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactUsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ContactUsID
		{
			get
			{
				return this._ContactUsID;
			}
			set
			{
				if ((this._ContactUsID != value))
				{
					this.OnContactUsIDChanging(value);
					this.SendPropertyChanging();
					this._ContactUsID = value;
					this.SendPropertyChanged("ContactUsID");
					this.OnContactUsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private string _CountryName;
		
		private string _CountryAbbreviation;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<State> _States;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnCountryAbbreviationChanging(string value);
    partial void OnCountryAbbreviationChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Country()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryAbbreviation", DbType="VarChar(5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CountryAbbreviation
		{
			get
			{
				return this._CountryAbbreviation;
			}
			set
			{
				if ((this._CountryAbbreviation != value))
				{
					this.OnCountryAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._CountryAbbreviation = value;
					this.SendPropertyChanged("CountryAbbreviation");
					this.OnCountryAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_State", Storage="_States", ThisKey="CountryID", OtherKey="CountryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<State> States
		{
			get
			{
				if ((this.serializing 
							&& (this._States.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._States;
			}
			set
			{
				this._States.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void Initialize()
		{
			this._States = new EntitySet<State>(new Action<State>(this.attach_States), new Action<State>(this.detach_States));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataImportConfigLocation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DataImportConfigLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConfigurationID;
		
		private string _ConfigurationName;
		
		private System.Nullable<byte> _ConfigurationNameLocation;
		
		private System.Nullable<byte> _SoftwareVersionLocation;
		
		private System.Nullable<byte> _PDANameLocation;
		
		private System.Nullable<byte> _YearLocation;
		
		private System.Nullable<byte> _MonthLocation;
		
		private System.Nullable<byte> _DateLocation;
		
		private System.Nullable<byte> _HourLocation;
		
		private System.Nullable<byte> _MinuteLocation;
		
		private System.Nullable<byte> _SecondLocation;
		
		private System.Nullable<byte> _KeyDataLocation;
		
		private System.Nullable<byte> _KeyDataSeqLocation;
		
		private System.Nullable<byte> _InfoSequenceLocation;
		
		private System.Nullable<byte> _HeaderLocation;
		
		private System.Nullable<byte> _TimelessLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConfigurationIDChanging(int value);
    partial void OnConfigurationIDChanged();
    partial void OnConfigurationNameChanging(string value);
    partial void OnConfigurationNameChanged();
    partial void OnConfigurationNameLocationChanging(System.Nullable<byte> value);
    partial void OnConfigurationNameLocationChanged();
    partial void OnSoftwareVersionLocationChanging(System.Nullable<byte> value);
    partial void OnSoftwareVersionLocationChanged();
    partial void OnPDANameLocationChanging(System.Nullable<byte> value);
    partial void OnPDANameLocationChanged();
    partial void OnYearLocationChanging(System.Nullable<byte> value);
    partial void OnYearLocationChanged();
    partial void OnMonthLocationChanging(System.Nullable<byte> value);
    partial void OnMonthLocationChanged();
    partial void OnDateLocationChanging(System.Nullable<byte> value);
    partial void OnDateLocationChanged();
    partial void OnHourLocationChanging(System.Nullable<byte> value);
    partial void OnHourLocationChanged();
    partial void OnMinuteLocationChanging(System.Nullable<byte> value);
    partial void OnMinuteLocationChanged();
    partial void OnSecondLocationChanging(System.Nullable<byte> value);
    partial void OnSecondLocationChanged();
    partial void OnKeyDataLocationChanging(System.Nullable<byte> value);
    partial void OnKeyDataLocationChanged();
    partial void OnKeyDataSeqLocationChanging(System.Nullable<byte> value);
    partial void OnKeyDataSeqLocationChanged();
    partial void OnInfoSequenceLocationChanging(System.Nullable<byte> value);
    partial void OnInfoSequenceLocationChanged();
    partial void OnHeaderLocationChanging(System.Nullable<byte> value);
    partial void OnHeaderLocationChanged();
    partial void OnTimelessLocationChanging(System.Nullable<byte> value);
    partial void OnTimelessLocationChanged();
    #endregion
		
		public DataImportConfigLocation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigurationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ConfigurationID
		{
			get
			{
				return this._ConfigurationID;
			}
			set
			{
				if ((this._ConfigurationID != value))
				{
					this.OnConfigurationIDChanging(value);
					this.SendPropertyChanging();
					this._ConfigurationID = value;
					this.SendPropertyChanged("ConfigurationID");
					this.OnConfigurationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigurationName", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ConfigurationName
		{
			get
			{
				return this._ConfigurationName;
			}
			set
			{
				if ((this._ConfigurationName != value))
				{
					this.OnConfigurationNameChanging(value);
					this.SendPropertyChanging();
					this._ConfigurationName = value;
					this.SendPropertyChanged("ConfigurationName");
					this.OnConfigurationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigurationNameLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<byte> ConfigurationNameLocation
		{
			get
			{
				return this._ConfigurationNameLocation;
			}
			set
			{
				if ((this._ConfigurationNameLocation != value))
				{
					this.OnConfigurationNameLocationChanging(value);
					this.SendPropertyChanging();
					this._ConfigurationNameLocation = value;
					this.SendPropertyChanged("ConfigurationNameLocation");
					this.OnConfigurationNameLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoftwareVersionLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<byte> SoftwareVersionLocation
		{
			get
			{
				return this._SoftwareVersionLocation;
			}
			set
			{
				if ((this._SoftwareVersionLocation != value))
				{
					this.OnSoftwareVersionLocationChanging(value);
					this.SendPropertyChanging();
					this._SoftwareVersionLocation = value;
					this.SendPropertyChanged("SoftwareVersionLocation");
					this.OnSoftwareVersionLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDANameLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<byte> PDANameLocation
		{
			get
			{
				return this._PDANameLocation;
			}
			set
			{
				if ((this._PDANameLocation != value))
				{
					this.OnPDANameLocationChanging(value);
					this.SendPropertyChanging();
					this._PDANameLocation = value;
					this.SendPropertyChanged("PDANameLocation");
					this.OnPDANameLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<byte> YearLocation
		{
			get
			{
				return this._YearLocation;
			}
			set
			{
				if ((this._YearLocation != value))
				{
					this.OnYearLocationChanging(value);
					this.SendPropertyChanging();
					this._YearLocation = value;
					this.SendPropertyChanged("YearLocation");
					this.OnYearLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<byte> MonthLocation
		{
			get
			{
				return this._MonthLocation;
			}
			set
			{
				if ((this._MonthLocation != value))
				{
					this.OnMonthLocationChanging(value);
					this.SendPropertyChanging();
					this._MonthLocation = value;
					this.SendPropertyChanged("MonthLocation");
					this.OnMonthLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<byte> DateLocation
		{
			get
			{
				return this._DateLocation;
			}
			set
			{
				if ((this._DateLocation != value))
				{
					this.OnDateLocationChanging(value);
					this.SendPropertyChanging();
					this._DateLocation = value;
					this.SendPropertyChanged("DateLocation");
					this.OnDateLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<byte> HourLocation
		{
			get
			{
				return this._HourLocation;
			}
			set
			{
				if ((this._HourLocation != value))
				{
					this.OnHourLocationChanging(value);
					this.SendPropertyChanging();
					this._HourLocation = value;
					this.SendPropertyChanged("HourLocation");
					this.OnHourLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinuteLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<byte> MinuteLocation
		{
			get
			{
				return this._MinuteLocation;
			}
			set
			{
				if ((this._MinuteLocation != value))
				{
					this.OnMinuteLocationChanging(value);
					this.SendPropertyChanging();
					this._MinuteLocation = value;
					this.SendPropertyChanged("MinuteLocation");
					this.OnMinuteLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<byte> SecondLocation
		{
			get
			{
				return this._SecondLocation;
			}
			set
			{
				if ((this._SecondLocation != value))
				{
					this.OnSecondLocationChanging(value);
					this.SendPropertyChanging();
					this._SecondLocation = value;
					this.SendPropertyChanged("SecondLocation");
					this.OnSecondLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyDataLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<byte> KeyDataLocation
		{
			get
			{
				return this._KeyDataLocation;
			}
			set
			{
				if ((this._KeyDataLocation != value))
				{
					this.OnKeyDataLocationChanging(value);
					this.SendPropertyChanging();
					this._KeyDataLocation = value;
					this.SendPropertyChanged("KeyDataLocation");
					this.OnKeyDataLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyDataSeqLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<byte> KeyDataSeqLocation
		{
			get
			{
				return this._KeyDataSeqLocation;
			}
			set
			{
				if ((this._KeyDataSeqLocation != value))
				{
					this.OnKeyDataSeqLocationChanging(value);
					this.SendPropertyChanging();
					this._KeyDataSeqLocation = value;
					this.SendPropertyChanged("KeyDataSeqLocation");
					this.OnKeyDataSeqLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoSequenceLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<byte> InfoSequenceLocation
		{
			get
			{
				return this._InfoSequenceLocation;
			}
			set
			{
				if ((this._InfoSequenceLocation != value))
				{
					this.OnInfoSequenceLocationChanging(value);
					this.SendPropertyChanging();
					this._InfoSequenceLocation = value;
					this.SendPropertyChanged("InfoSequenceLocation");
					this.OnInfoSequenceLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<byte> HeaderLocation
		{
			get
			{
				return this._HeaderLocation;
			}
			set
			{
				if ((this._HeaderLocation != value))
				{
					this.OnHeaderLocationChanging(value);
					this.SendPropertyChanging();
					this._HeaderLocation = value;
					this.SendPropertyChanged("HeaderLocation");
					this.OnHeaderLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimelessLocation", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<byte> TimelessLocation
		{
			get
			{
				return this._TimelessLocation;
			}
			set
			{
				if ((this._TimelessLocation != value))
				{
					this.OnTimelessLocationChanging(value);
					this.SendPropertyChanging();
					this._TimelessLocation = value;
					this.SendPropertyChanged("TimelessLocation");
					this.OnTimelessLocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DynamicData")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DynamicData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DynamicDataID;
		
		private int _ColumnID;
		
		private System.Nullable<int> _ID;
		
		private string _Value;
		
		private EntityRef<ColumnName> _ColumnName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDynamicDataIDChanging(int value);
    partial void OnDynamicDataIDChanged();
    partial void OnColumnIDChanging(int value);
    partial void OnColumnIDChanged();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public DynamicData()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DynamicDataID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DynamicDataID
		{
			get
			{
				return this._DynamicDataID;
			}
			set
			{
				if ((this._DynamicDataID != value))
				{
					this.OnDynamicDataIDChanging(value);
					this.SendPropertyChanging();
					this._DynamicDataID = value;
					this.SendPropertyChanged("DynamicDataID");
					this.OnDynamicDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ColumnID
		{
			get
			{
				return this._ColumnID;
			}
			set
			{
				if ((this._ColumnID != value))
				{
					if (this._ColumnName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColumnIDChanging(value);
					this.SendPropertyChanging();
					this._ColumnID = value;
					this.SendPropertyChanged("ColumnID");
					this.OnColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ColumnName_DynamicData", Storage="_ColumnName", ThisKey="ColumnID", OtherKey="ColumnID", IsForeignKey=true)]
		public ColumnName ColumnName
		{
			get
			{
				return this._ColumnName.Entity;
			}
			set
			{
				ColumnName previousValue = this._ColumnName.Entity;
				if (((previousValue != value) 
							|| (this._ColumnName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ColumnName.Entity = null;
						previousValue.DynamicDatas.Remove(this);
					}
					this._ColumnName.Entity = value;
					if ((value != null))
					{
						value.DynamicDatas.Add(this);
						this._ColumnID = value.ColumnID;
					}
					else
					{
						this._ColumnID = default(int);
					}
					this.SendPropertyChanged("ColumnName");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ColumnName = default(EntityRef<ColumnName>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ErrorLogId;
		
		private string _ErrorMessage;
		
		private string _ErrorType;
		
		private string _DatasetInfo;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorLogIdChanging(int value);
    partial void OnErrorLogIdChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnErrorTypeChanging(string value);
    partial void OnErrorTypeChanged();
    partial void OnDatasetInfoChanging(string value);
    partial void OnDatasetInfoChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public ErrorLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ErrorLogId
		{
			get
			{
				return this._ErrorLogId;
			}
			set
			{
				if ((this._ErrorLogId != value))
				{
					this.OnErrorLogIdChanging(value);
					this.SendPropertyChanging();
					this._ErrorLogId = value;
					this.SendPropertyChanged("ErrorLogId");
					this.OnErrorLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorType", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ErrorType
		{
			get
			{
				return this._ErrorType;
			}
			set
			{
				if ((this._ErrorType != value))
				{
					this.OnErrorTypeChanging(value);
					this.SendPropertyChanging();
					this._ErrorType = value;
					this.SendPropertyChanged("ErrorType");
					this.OnErrorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatasetInfo", DbType="VarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string DatasetInfo
		{
			get
			{
				return this._DatasetInfo;
			}
			set
			{
				if ((this._DatasetInfo != value))
				{
					this.OnDatasetInfoChanging(value);
					this.SendPropertyChanging();
					this._DatasetInfo = value;
					this.SendPropertyChanged("DatasetInfo");
					this.OnDatasetInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HospitalDemographicInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class HospitalDemographicInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HospitalDemographicID;
		
		private System.Nullable<int> _HospitalInfoID;
		
		private string _HospitalUnitName;
		
		private bool _TCABUnit;
		
		private string _UnitType;
		
		private System.Nullable<short> _BedsInUnit;
		
		private System.Nullable<double> _BudgetedPatientsPerNurse;
		
		private bool _DocByException;
		
		private System.Nullable<short> _ElectronicDocumentation;
		
		private string _PharmacyType;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private bool _IsEndDate;
		
		private System.Nullable<int> _EndedBy;
		
		private System.Nullable<System.DateTime> _EndedDate;
		
		private System.Nullable<bool> _IsDynamic;
		
		private bool _IsCollapse;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private EntitySet<Year> _Years;
		
		private EntitySet<HospitalUpload> _HospitalUploads;
		
		private EntitySet<MultiUserDemographic> _MultiUserDemographics;
		
		private EntitySet<NursePDAInfo> _NursePDAInfos;
		
		private EntityRef<HospitalInfo> _HospitalInfo;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHospitalDemographicIDChanging(int value);
    partial void OnHospitalDemographicIDChanged();
    partial void OnHospitalInfoIDChanging(System.Nullable<int> value);
    partial void OnHospitalInfoIDChanged();
    partial void OnHospitalUnitNameChanging(string value);
    partial void OnHospitalUnitNameChanged();
    partial void OnTCABUnitChanging(bool value);
    partial void OnTCABUnitChanged();
    partial void OnUnitTypeChanging(string value);
    partial void OnUnitTypeChanged();
    partial void OnBedsInUnitChanging(System.Nullable<short> value);
    partial void OnBedsInUnitChanged();
    partial void OnBudgetedPatientsPerNurseChanging(System.Nullable<double> value);
    partial void OnBudgetedPatientsPerNurseChanged();
    partial void OnDocByExceptionChanging(bool value);
    partial void OnDocByExceptionChanged();
    partial void OnElectronicDocumentationChanging(System.Nullable<short> value);
    partial void OnElectronicDocumentationChanged();
    partial void OnPharmacyTypeChanging(string value);
    partial void OnPharmacyTypeChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnIsEndDateChanging(bool value);
    partial void OnIsEndDateChanged();
    partial void OnEndedByChanging(System.Nullable<int> value);
    partial void OnEndedByChanged();
    partial void OnEndedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndedDateChanged();
    partial void OnIsDynamicChanging(System.Nullable<bool> value);
    partial void OnIsDynamicChanged();
    partial void OnIsCollapseChanging(bool value);
    partial void OnIsCollapseChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public HospitalDemographicInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalDemographicID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int HospitalDemographicID
		{
			get
			{
				return this._HospitalDemographicID;
			}
			set
			{
				if ((this._HospitalDemographicID != value))
				{
					this.OnHospitalDemographicIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalDemographicID = value;
					this.SendPropertyChanged("HospitalDemographicID");
					this.OnHospitalDemographicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalInfoID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> HospitalInfoID
		{
			get
			{
				return this._HospitalInfoID;
			}
			set
			{
				if ((this._HospitalInfoID != value))
				{
					if (this._HospitalInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHospitalInfoIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalInfoID = value;
					this.SendPropertyChanged("HospitalInfoID");
					this.OnHospitalInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalUnitName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string HospitalUnitName
		{
			get
			{
				return this._HospitalUnitName;
			}
			set
			{
				if ((this._HospitalUnitName != value))
				{
					this.OnHospitalUnitNameChanging(value);
					this.SendPropertyChanging();
					this._HospitalUnitName = value;
					this.SendPropertyChanged("HospitalUnitName");
					this.OnHospitalUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCABUnit", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool TCABUnit
		{
			get
			{
				return this._TCABUnit;
			}
			set
			{
				if ((this._TCABUnit != value))
				{
					this.OnTCABUnitChanging(value);
					this.SendPropertyChanging();
					this._TCABUnit = value;
					this.SendPropertyChanged("TCABUnit");
					this.OnTCABUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitType", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string UnitType
		{
			get
			{
				return this._UnitType;
			}
			set
			{
				if ((this._UnitType != value))
				{
					this.OnUnitTypeChanging(value);
					this.SendPropertyChanging();
					this._UnitType = value;
					this.SendPropertyChanged("UnitType");
					this.OnUnitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedsInUnit", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<short> BedsInUnit
		{
			get
			{
				return this._BedsInUnit;
			}
			set
			{
				if ((this._BedsInUnit != value))
				{
					this.OnBedsInUnitChanging(value);
					this.SendPropertyChanging();
					this._BedsInUnit = value;
					this.SendPropertyChanged("BedsInUnit");
					this.OnBedsInUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetedPatientsPerNurse", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<double> BudgetedPatientsPerNurse
		{
			get
			{
				return this._BudgetedPatientsPerNurse;
			}
			set
			{
				if ((this._BudgetedPatientsPerNurse != value))
				{
					this.OnBudgetedPatientsPerNurseChanging(value);
					this.SendPropertyChanging();
					this._BudgetedPatientsPerNurse = value;
					this.SendPropertyChanged("BudgetedPatientsPerNurse");
					this.OnBudgetedPatientsPerNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocByException", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool DocByException
		{
			get
			{
				return this._DocByException;
			}
			set
			{
				if ((this._DocByException != value))
				{
					this.OnDocByExceptionChanging(value);
					this.SendPropertyChanging();
					this._DocByException = value;
					this.SendPropertyChanged("DocByException");
					this.OnDocByExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectronicDocumentation", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<short> ElectronicDocumentation
		{
			get
			{
				return this._ElectronicDocumentation;
			}
			set
			{
				if ((this._ElectronicDocumentation != value))
				{
					this.OnElectronicDocumentationChanging(value);
					this.SendPropertyChanging();
					this._ElectronicDocumentation = value;
					this.SendPropertyChanged("ElectronicDocumentation");
					this.OnElectronicDocumentationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyType", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string PharmacyType
		{
			get
			{
				return this._PharmacyType;
			}
			set
			{
				if ((this._PharmacyType != value))
				{
					this.OnPharmacyTypeChanging(value);
					this.SendPropertyChanging();
					this._PharmacyType = value;
					this.SendPropertyChanged("PharmacyType");
					this.OnPharmacyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndDate", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool IsEndDate
		{
			get
			{
				return this._IsEndDate;
			}
			set
			{
				if ((this._IsEndDate != value))
				{
					this.OnIsEndDateChanging(value);
					this.SendPropertyChanging();
					this._IsEndDate = value;
					this.SendPropertyChanged("IsEndDate");
					this.OnIsEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndedBy", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> EndedBy
		{
			get
			{
				return this._EndedBy;
			}
			set
			{
				if ((this._EndedBy != value))
				{
					this.OnEndedByChanging(value);
					this.SendPropertyChanging();
					this._EndedBy = value;
					this.SendPropertyChanged("EndedBy");
					this.OnEndedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.DateTime> EndedDate
		{
			get
			{
				return this._EndedDate;
			}
			set
			{
				if ((this._EndedDate != value))
				{
					this.OnEndedDateChanging(value);
					this.SendPropertyChanging();
					this._EndedDate = value;
					this.SendPropertyChanged("EndedDate");
					this.OnEndedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDynamic", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> IsDynamic
		{
			get
			{
				return this._IsDynamic;
			}
			set
			{
				if ((this._IsDynamic != value))
				{
					this.OnIsDynamicChanging(value);
					this.SendPropertyChanging();
					this._IsDynamic = value;
					this.SendPropertyChanged("IsDynamic");
					this.OnIsDynamicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCollapse", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool IsCollapse
		{
			get
			{
				return this._IsCollapse;
			}
			set
			{
				if ((this._IsCollapse != value))
				{
					this.OnIsCollapseChanging(value);
					this.SendPropertyChanging();
					this._IsCollapse = value;
					this.SendPropertyChanged("IsCollapse");
					this.OnIsCollapseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalDemographicInfo_Year", Storage="_Years", ThisKey="HospitalDemographicID", OtherKey="HospitalDemographicID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<Year> Years
		{
			get
			{
				if ((this.serializing 
							&& (this._Years.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Years;
			}
			set
			{
				this._Years.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalDemographicInfo_HospitalUpload", Storage="_HospitalUploads", ThisKey="HospitalDemographicID", OtherKey="HospitalDemographicID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<HospitalUpload> HospitalUploads
		{
			get
			{
				if ((this.serializing 
							&& (this._HospitalUploads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._HospitalUploads;
			}
			set
			{
				this._HospitalUploads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalDemographicInfo_MultiUserDemographic", Storage="_MultiUserDemographics", ThisKey="HospitalDemographicID", OtherKey="HospitalDemographicID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<MultiUserDemographic> MultiUserDemographics
		{
			get
			{
				if ((this.serializing 
							&& (this._MultiUserDemographics.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MultiUserDemographics;
			}
			set
			{
				this._MultiUserDemographics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalDemographicInfo_NursePDAInfo", Storage="_NursePDAInfos", ThisKey="HospitalDemographicID", OtherKey="HospitalDemographicID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<NursePDAInfo> NursePDAInfos
		{
			get
			{
				if ((this.serializing 
							&& (this._NursePDAInfos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NursePDAInfos;
			}
			set
			{
				this._NursePDAInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalInfo_HospitalDemographicInfo", Storage="_HospitalInfo", ThisKey="HospitalInfoID", OtherKey="HospitalInfoID", IsForeignKey=true, DeleteRule="CASCADE")]
		public HospitalInfo HospitalInfo
		{
			get
			{
				return this._HospitalInfo.Entity;
			}
			set
			{
				HospitalInfo previousValue = this._HospitalInfo.Entity;
				if (((previousValue != value) 
							|| (this._HospitalInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HospitalInfo.Entity = null;
						previousValue.HospitalDemographicInfos.Remove(this);
					}
					this._HospitalInfo.Entity = value;
					if ((value != null))
					{
						value.HospitalDemographicInfos.Add(this);
						this._HospitalInfoID = value.HospitalInfoID;
					}
					else
					{
						this._HospitalInfoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HospitalInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Years(Year entity)
		{
			this.SendPropertyChanging();
			entity.HospitalDemographicInfo = this;
		}
		
		private void detach_Years(Year entity)
		{
			this.SendPropertyChanging();
			entity.HospitalDemographicInfo = null;
		}
		
		private void attach_HospitalUploads(HospitalUpload entity)
		{
			this.SendPropertyChanging();
			entity.HospitalDemographicInfo = this;
		}
		
		private void detach_HospitalUploads(HospitalUpload entity)
		{
			this.SendPropertyChanging();
			entity.HospitalDemographicInfo = null;
		}
		
		private void attach_MultiUserDemographics(MultiUserDemographic entity)
		{
			this.SendPropertyChanging();
			entity.HospitalDemographicInfo = this;
		}
		
		private void detach_MultiUserDemographics(MultiUserDemographic entity)
		{
			this.SendPropertyChanging();
			entity.HospitalDemographicInfo = null;
		}
		
		private void attach_NursePDAInfos(NursePDAInfo entity)
		{
			this.SendPropertyChanging();
			entity.HospitalDemographicInfo = this;
		}
		
		private void detach_NursePDAInfos(NursePDAInfo entity)
		{
			this.SendPropertyChanging();
			entity.HospitalDemographicInfo = null;
		}
		
		private void Initialize()
		{
			this._Years = new EntitySet<Year>(new Action<Year>(this.attach_Years), new Action<Year>(this.detach_Years));
			this._HospitalUploads = new EntitySet<HospitalUpload>(new Action<HospitalUpload>(this.attach_HospitalUploads), new Action<HospitalUpload>(this.detach_HospitalUploads));
			this._MultiUserDemographics = new EntitySet<MultiUserDemographic>(new Action<MultiUserDemographic>(this.attach_MultiUserDemographics), new Action<MultiUserDemographic>(this.detach_MultiUserDemographics));
			this._NursePDAInfos = new EntitySet<NursePDAInfo>(new Action<NursePDAInfo>(this.attach_NursePDAInfos), new Action<NursePDAInfo>(this.detach_NursePDAInfos));
			this._HospitalInfo = default(EntityRef<HospitalInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HospitalInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class HospitalInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HospitalInfoID;
		
		private int _RecordCounter;
		
		private int _UserID;
		
		private string _HospitalName;
		
		private string _ChiefNursingOfficerFirstName;
		
		private string _ChiefNursingOfficerLastName;
		
		private string _ChiefNursingOfficerPhone;
		
		private string _ChiefNursingOfficerEmail;
		
		private string _Address;
		
		private string _City;
		
		private int _StateID;
		
		private string _Zip;
		
		private bool _IsCollapse;
		
		private bool _IsActive;
		
		private System.Nullable<bool> _IsDynamic;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private EntitySet<HospitalDemographicInfo> _HospitalDemographicInfos;
		
		private EntitySet<MultiUserHospital> _MultiUserHospitals;
		
		private EntityRef<State> _State;
		
		private EntityRef<UserInfo> _UserInfo;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHospitalInfoIDChanging(int value);
    partial void OnHospitalInfoIDChanged();
    partial void OnRecordCounterChanging(int value);
    partial void OnRecordCounterChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnHospitalNameChanging(string value);
    partial void OnHospitalNameChanged();
    partial void OnChiefNursingOfficerFirstNameChanging(string value);
    partial void OnChiefNursingOfficerFirstNameChanged();
    partial void OnChiefNursingOfficerLastNameChanging(string value);
    partial void OnChiefNursingOfficerLastNameChanged();
    partial void OnChiefNursingOfficerPhoneChanging(string value);
    partial void OnChiefNursingOfficerPhoneChanged();
    partial void OnChiefNursingOfficerEmailChanging(string value);
    partial void OnChiefNursingOfficerEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnIsCollapseChanging(bool value);
    partial void OnIsCollapseChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsDynamicChanging(System.Nullable<bool> value);
    partial void OnIsDynamicChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public HospitalInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalInfoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int HospitalInfoID
		{
			get
			{
				return this._HospitalInfoID;
			}
			set
			{
				if ((this._HospitalInfoID != value))
				{
					this.OnHospitalInfoIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalInfoID = value;
					this.SendPropertyChanged("HospitalInfoID");
					this.OnHospitalInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordCounter", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RecordCounter
		{
			get
			{
				return this._RecordCounter;
			}
			set
			{
				if ((this._RecordCounter != value))
				{
					this.OnRecordCounterChanging(value);
					this.SendPropertyChanging();
					this._RecordCounter = value;
					this.SendPropertyChanged("RecordCounter");
					this.OnRecordCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string HospitalName
		{
			get
			{
				return this._HospitalName;
			}
			set
			{
				if ((this._HospitalName != value))
				{
					this.OnHospitalNameChanging(value);
					this.SendPropertyChanging();
					this._HospitalName = value;
					this.SendPropertyChanged("HospitalName");
					this.OnHospitalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefNursingOfficerFirstName", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ChiefNursingOfficerFirstName
		{
			get
			{
				return this._ChiefNursingOfficerFirstName;
			}
			set
			{
				if ((this._ChiefNursingOfficerFirstName != value))
				{
					this.OnChiefNursingOfficerFirstNameChanging(value);
					this.SendPropertyChanging();
					this._ChiefNursingOfficerFirstName = value;
					this.SendPropertyChanged("ChiefNursingOfficerFirstName");
					this.OnChiefNursingOfficerFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefNursingOfficerLastName", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ChiefNursingOfficerLastName
		{
			get
			{
				return this._ChiefNursingOfficerLastName;
			}
			set
			{
				if ((this._ChiefNursingOfficerLastName != value))
				{
					this.OnChiefNursingOfficerLastNameChanging(value);
					this.SendPropertyChanging();
					this._ChiefNursingOfficerLastName = value;
					this.SendPropertyChanged("ChiefNursingOfficerLastName");
					this.OnChiefNursingOfficerLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefNursingOfficerPhone", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string ChiefNursingOfficerPhone
		{
			get
			{
				return this._ChiefNursingOfficerPhone;
			}
			set
			{
				if ((this._ChiefNursingOfficerPhone != value))
				{
					this.OnChiefNursingOfficerPhoneChanging(value);
					this.SendPropertyChanging();
					this._ChiefNursingOfficerPhone = value;
					this.SendPropertyChanged("ChiefNursingOfficerPhone");
					this.OnChiefNursingOfficerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefNursingOfficerEmail", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ChiefNursingOfficerEmail
		{
			get
			{
				return this._ChiefNursingOfficerEmail;
			}
			set
			{
				if ((this._ChiefNursingOfficerEmail != value))
				{
					this.OnChiefNursingOfficerEmailChanging(value);
					this.SendPropertyChanging();
					this._ChiefNursingOfficerEmail = value;
					this.SendPropertyChanged("ChiefNursingOfficerEmail");
					this.OnChiefNursingOfficerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(15)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCollapse", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool IsCollapse
		{
			get
			{
				return this._IsCollapse;
			}
			set
			{
				if ((this._IsCollapse != value))
				{
					this.OnIsCollapseChanging(value);
					this.SendPropertyChanging();
					this._IsCollapse = value;
					this.SendPropertyChanged("IsCollapse");
					this.OnIsCollapseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDynamic", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> IsDynamic
		{
			get
			{
				return this._IsDynamic;
			}
			set
			{
				if ((this._IsDynamic != value))
				{
					this.OnIsDynamicChanging(value);
					this.SendPropertyChanging();
					this._IsDynamic = value;
					this.SendPropertyChanged("IsDynamic");
					this.OnIsDynamicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalInfo_HospitalDemographicInfo", Storage="_HospitalDemographicInfos", ThisKey="HospitalInfoID", OtherKey="HospitalInfoID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<HospitalDemographicInfo> HospitalDemographicInfos
		{
			get
			{
				if ((this.serializing 
							&& (this._HospitalDemographicInfos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._HospitalDemographicInfos;
			}
			set
			{
				this._HospitalDemographicInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalInfo_MultiUserHospital", Storage="_MultiUserHospitals", ThisKey="HospitalInfoID", OtherKey="HospitalInfoID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<MultiUserHospital> MultiUserHospitals
		{
			get
			{
				if ((this.serializing 
							&& (this._MultiUserHospitals.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MultiUserHospitals;
			}
			set
			{
				this._MultiUserHospitals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_HospitalInfo", Storage="_State", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.HospitalInfos.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.HospitalInfos.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(int);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_HospitalInfo", Storage="_UserInfo", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.HospitalInfos.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.HospitalInfos.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HospitalDemographicInfos(HospitalDemographicInfo entity)
		{
			this.SendPropertyChanging();
			entity.HospitalInfo = this;
		}
		
		private void detach_HospitalDemographicInfos(HospitalDemographicInfo entity)
		{
			this.SendPropertyChanging();
			entity.HospitalInfo = null;
		}
		
		private void attach_MultiUserHospitals(MultiUserHospital entity)
		{
			this.SendPropertyChanging();
			entity.HospitalInfo = this;
		}
		
		private void detach_MultiUserHospitals(MultiUserHospital entity)
		{
			this.SendPropertyChanging();
			entity.HospitalInfo = null;
		}
		
		private void Initialize()
		{
			this._HospitalDemographicInfos = new EntitySet<HospitalDemographicInfo>(new Action<HospitalDemographicInfo>(this.attach_HospitalDemographicInfos), new Action<HospitalDemographicInfo>(this.detach_HospitalDemographicInfos));
			this._MultiUserHospitals = new EntitySet<MultiUserHospital>(new Action<MultiUserHospital>(this.attach_MultiUserHospitals), new Action<MultiUserHospital>(this.detach_MultiUserHospitals));
			this._State = default(EntityRef<State>);
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HospitalType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class HospitalType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HospitalTypeID;
		
		private string _HospitalTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHospitalTypeIDChanging(int value);
    partial void OnHospitalTypeIDChanged();
    partial void OnHospitalTypeNameChanging(string value);
    partial void OnHospitalTypeNameChanged();
    #endregion
		
		public HospitalType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int HospitalTypeID
		{
			get
			{
				return this._HospitalTypeID;
			}
			set
			{
				if ((this._HospitalTypeID != value))
				{
					this.OnHospitalTypeIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalTypeID = value;
					this.SendPropertyChanged("HospitalTypeID");
					this.OnHospitalTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalTypeName", DbType="VarChar(102) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string HospitalTypeName
		{
			get
			{
				return this._HospitalTypeName;
			}
			set
			{
				if ((this._HospitalTypeName != value))
				{
					this.OnHospitalTypeNameChanging(value);
					this.SendPropertyChanging();
					this._HospitalTypeName = value;
					this.SendPropertyChanged("HospitalTypeName");
					this.OnHospitalTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HospitalUploads")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class HospitalUpload : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HospitalUploadID;
		
		private string _UploadedFileName;
		
		private int _HospitalDemographicID;
		
		private string _OriginalFileName;
		
		private string _FilePath;
		
		private string _Year;
		
		private string _Month;
		
		private bool _IsDataSaved;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private EntityRef<HospitalDemographicInfo> _HospitalDemographicInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHospitalUploadIDChanging(int value);
    partial void OnHospitalUploadIDChanged();
    partial void OnUploadedFileNameChanging(string value);
    partial void OnUploadedFileNameChanged();
    partial void OnHospitalDemographicIDChanging(int value);
    partial void OnHospitalDemographicIDChanged();
    partial void OnOriginalFileNameChanging(string value);
    partial void OnOriginalFileNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnIsDataSavedChanging(bool value);
    partial void OnIsDataSavedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public HospitalUpload()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalUploadID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int HospitalUploadID
		{
			get
			{
				return this._HospitalUploadID;
			}
			set
			{
				if ((this._HospitalUploadID != value))
				{
					this.OnHospitalUploadIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalUploadID = value;
					this.SendPropertyChanged("HospitalUploadID");
					this.OnHospitalUploadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedFileName", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UploadedFileName
		{
			get
			{
				return this._UploadedFileName;
			}
			set
			{
				if ((this._UploadedFileName != value))
				{
					this.OnUploadedFileNameChanging(value);
					this.SendPropertyChanging();
					this._UploadedFileName = value;
					this.SendPropertyChanged("UploadedFileName");
					this.OnUploadedFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalDemographicID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int HospitalDemographicID
		{
			get
			{
				return this._HospitalDemographicID;
			}
			set
			{
				if ((this._HospitalDemographicID != value))
				{
					if (this._HospitalDemographicInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHospitalDemographicIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalDemographicID = value;
					this.SendPropertyChanged("HospitalDemographicID");
					this.OnHospitalDemographicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalFileName", DbType="NVarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string OriginalFileName
		{
			get
			{
				return this._OriginalFileName;
			}
			set
			{
				if ((this._OriginalFileName != value))
				{
					this.OnOriginalFileNameChanging(value);
					this.SendPropertyChanging();
					this._OriginalFileName = value;
					this.SendPropertyChanged("OriginalFileName");
					this.OnOriginalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDataSaved", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsDataSaved
		{
			get
			{
				return this._IsDataSaved;
			}
			set
			{
				if ((this._IsDataSaved != value))
				{
					this.OnIsDataSavedChanging(value);
					this.SendPropertyChanging();
					this._IsDataSaved = value;
					this.SendPropertyChanged("IsDataSaved");
					this.OnIsDataSavedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalDemographicInfo_HospitalUpload", Storage="_HospitalDemographicInfo", ThisKey="HospitalDemographicID", OtherKey="HospitalDemographicID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HospitalDemographicInfo HospitalDemographicInfo
		{
			get
			{
				return this._HospitalDemographicInfo.Entity;
			}
			set
			{
				HospitalDemographicInfo previousValue = this._HospitalDemographicInfo.Entity;
				if (((previousValue != value) 
							|| (this._HospitalDemographicInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HospitalDemographicInfo.Entity = null;
						previousValue.HospitalUploads.Remove(this);
					}
					this._HospitalDemographicInfo.Entity = value;
					if ((value != null))
					{
						value.HospitalUploads.Add(this);
						this._HospitalDemographicID = value.HospitalDemographicID;
					}
					else
					{
						this._HospitalDemographicID = default(int);
					}
					this.SendPropertyChanged("HospitalDemographicInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._HospitalDemographicInfo = default(EntityRef<HospitalDemographicInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LastLocation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LastLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LastLocationID;
		
		private string _LastLocation1;
		
		private int _ValidateID;
		
		private bool _IsActive;
		
		private string _RenameLastLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLastLocationIDChanging(int value);
    partial void OnLastLocationIDChanged();
    partial void OnLastLocation1Changing(string value);
    partial void OnLastLocation1Changed();
    partial void OnValidateIDChanging(int value);
    partial void OnValidateIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnRenameLastLocationChanging(string value);
    partial void OnRenameLastLocationChanged();
    #endregion
		
		public LastLocation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LastLocationID
		{
			get
			{
				return this._LastLocationID;
			}
			set
			{
				if ((this._LastLocationID != value))
				{
					this.OnLastLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LastLocationID = value;
					this.SendPropertyChanged("LastLocationID");
					this.OnLastLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LastLocation", Storage="_LastLocation1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string LastLocation1
		{
			get
			{
				return this._LastLocation1;
			}
			set
			{
				if ((this._LastLocation1 != value))
				{
					this.OnLastLocation1Changing(value);
					this.SendPropertyChanging();
					this._LastLocation1 = value;
					this.SendPropertyChanged("LastLocation1");
					this.OnLastLocation1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ValidateID
		{
			get
			{
				return this._ValidateID;
			}
			set
			{
				if ((this._ValidateID != value))
				{
					this.OnValidateIDChanging(value);
					this.SendPropertyChanging();
					this._ValidateID = value;
					this.SendPropertyChanged("ValidateID");
					this.OnValidateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenameLastLocation", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string RenameLastLocation
		{
			get
			{
				return this._RenameLastLocation;
			}
			set
			{
				if ((this._RenameLastLocation != value))
				{
					this.OnRenameLastLocationChanging(value);
					this.SendPropertyChanging();
					this._RenameLastLocation = value;
					this.SendPropertyChanged("RenameLastLocation");
					this.OnRenameLastLocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationID;
		
		private string _Location1;
		
		private int _ValidateID;
		
		private bool _IsActive;
		
		private string _RenameLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnLocation1Changing(string value);
    partial void OnLocation1Changed();
    partial void OnValidateIDChanging(int value);
    partial void OnValidateIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnRenameLocationChanging(string value);
    partial void OnRenameLocationChanged();
    #endregion
		
		public Location()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Location", Storage="_Location1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Location1
		{
			get
			{
				return this._Location1;
			}
			set
			{
				if ((this._Location1 != value))
				{
					this.OnLocation1Changing(value);
					this.SendPropertyChanging();
					this._Location1 = value;
					this.SendPropertyChanged("Location1");
					this.OnLocation1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ValidateID
		{
			get
			{
				return this._ValidateID;
			}
			set
			{
				if ((this._ValidateID != value))
				{
					this.OnValidateIDChanging(value);
					this.SendPropertyChanging();
					this._ValidateID = value;
					this.SendPropertyChanged("ValidateID");
					this.OnValidateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenameLocation", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string RenameLocation
		{
			get
			{
				return this._RenameLocation;
			}
			set
			{
				if ((this._RenameLocation != value))
				{
					this.OnRenameLocationChanging(value);
					this.SendPropertyChanging();
					this._RenameLocation = value;
					this.SendPropertyChanged("RenameLocation");
					this.OnRenameLocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocationCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LocationCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationID;
		
		private string _LocationCategory1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnLocationCategory1Changing(string value);
    partial void OnLocationCategory1Changed();
    #endregion
		
		public LocationCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LocationCategory", Storage="_LocationCategory1", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string LocationCategory1
		{
			get
			{
				return this._LocationCategory1;
			}
			set
			{
				if ((this._LocationCategory1 != value))
				{
					this.OnLocationCategory1Changing(value);
					this.SendPropertyChanging();
					this._LocationCategory1 = value;
					this.SendPropertyChanged("LocationCategory1");
					this.OnLocationCategory1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaintainControlState")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MaintainControlState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaintainControlStateID;
		
		private string _Year;
		
		private string _Month;
		
		private int _UserID;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<UserInfo> _UserInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaintainControlStateIDChanging(int value);
    partial void OnMaintainControlStateIDChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MaintainControlState()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintainControlStateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MaintainControlStateID
		{
			get
			{
				return this._MaintainControlStateID;
			}
			set
			{
				if ((this._MaintainControlStateID != value))
				{
					this.OnMaintainControlStateIDChanging(value);
					this.SendPropertyChanging();
					this._MaintainControlStateID = value;
					this.SendPropertyChanged("MaintainControlStateID");
					this.OnMaintainControlStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_MaintainControlState", Storage="_UserInfo", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.MaintainControlStates.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.MaintainControlStates.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Months")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Month : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MonthID;
		
		private string _MonthName;
		
		private int _YearID;
		
		private EntityRef<Year> _Year;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMonthIDChanging(int value);
    partial void OnMonthIDChanged();
    partial void OnMonthNameChanging(string value);
    partial void OnMonthNameChanged();
    partial void OnYearIDChanging(int value);
    partial void OnYearIDChanged();
    #endregion
		
		public Month()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MonthID
		{
			get
			{
				return this._MonthID;
			}
			set
			{
				if ((this._MonthID != value))
				{
					this.OnMonthIDChanging(value);
					this.SendPropertyChanging();
					this._MonthID = value;
					this.SendPropertyChanged("MonthID");
					this.OnMonthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MonthName
		{
			get
			{
				return this._MonthName;
			}
			set
			{
				if ((this._MonthName != value))
				{
					this.OnMonthNameChanging(value);
					this.SendPropertyChanging();
					this._MonthName = value;
					this.SendPropertyChanged("MonthName");
					this.OnMonthNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int YearID
		{
			get
			{
				return this._YearID;
			}
			set
			{
				if ((this._YearID != value))
				{
					if (this._Year.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnYearIDChanging(value);
					this.SendPropertyChanging();
					this._YearID = value;
					this.SendPropertyChanged("YearID");
					this.OnYearIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_Month", Storage="_Year", ThisKey="YearID", OtherKey="YearID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Year Year
		{
			get
			{
				return this._Year.Entity;
			}
			set
			{
				Year previousValue = this._Year.Entity;
				if (((previousValue != value) 
							|| (this._Year.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Year.Entity = null;
						previousValue.Months.Remove(this);
					}
					this._Year.Entity = value;
					if ((value != null))
					{
						value.Months.Add(this);
						this._YearID = value.YearID;
					}
					else
					{
						this._YearID = default(int);
					}
					this.SendPropertyChanged("Year");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Year = default(EntityRef<Year>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MultiUserDemographic")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MultiUserDemographic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MultiUserDemographicID;
		
		private System.Nullable<int> _HospitalDemographicID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _PermissionID;
		
		private bool _IsCollapse;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private EntityRef<HospitalDemographicInfo> _HospitalDemographicInfo;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<UserInfo> _UserInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMultiUserDemographicIDChanging(int value);
    partial void OnMultiUserDemographicIDChanged();
    partial void OnHospitalDemographicIDChanging(System.Nullable<int> value);
    partial void OnHospitalDemographicIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnPermissionIDChanging(System.Nullable<int> value);
    partial void OnPermissionIDChanged();
    partial void OnIsCollapseChanging(bool value);
    partial void OnIsCollapseChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public MultiUserDemographic()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiUserDemographicID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MultiUserDemographicID
		{
			get
			{
				return this._MultiUserDemographicID;
			}
			set
			{
				if ((this._MultiUserDemographicID != value))
				{
					this.OnMultiUserDemographicIDChanging(value);
					this.SendPropertyChanging();
					this._MultiUserDemographicID = value;
					this.SendPropertyChanged("MultiUserDemographicID");
					this.OnMultiUserDemographicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalDemographicID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> HospitalDemographicID
		{
			get
			{
				return this._HospitalDemographicID;
			}
			set
			{
				if ((this._HospitalDemographicID != value))
				{
					if (this._HospitalDemographicInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHospitalDemographicIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalDemographicID = value;
					this.SendPropertyChanged("HospitalDemographicID");
					this.OnHospitalDemographicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCollapse", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsCollapse
		{
			get
			{
				return this._IsCollapse;
			}
			set
			{
				if ((this._IsCollapse != value))
				{
					this.OnIsCollapseChanging(value);
					this.SendPropertyChanging();
					this._IsCollapse = value;
					this.SendPropertyChanged("IsCollapse");
					this.OnIsCollapseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalDemographicInfo_MultiUserDemographic", Storage="_HospitalDemographicInfo", ThisKey="HospitalDemographicID", OtherKey="HospitalDemographicID", IsForeignKey=true, DeleteRule="CASCADE")]
		public HospitalDemographicInfo HospitalDemographicInfo
		{
			get
			{
				return this._HospitalDemographicInfo.Entity;
			}
			set
			{
				HospitalDemographicInfo previousValue = this._HospitalDemographicInfo.Entity;
				if (((previousValue != value) 
							|| (this._HospitalDemographicInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HospitalDemographicInfo.Entity = null;
						previousValue.MultiUserDemographics.Remove(this);
					}
					this._HospitalDemographicInfo.Entity = value;
					if ((value != null))
					{
						value.MultiUserDemographics.Add(this);
						this._HospitalDemographicID = value.HospitalDemographicID;
					}
					else
					{
						this._HospitalDemographicID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HospitalDemographicInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_MultiUserDemographic", Storage="_Permission", ThisKey="PermissionID", OtherKey="PermissionID", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.MultiUserDemographics.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.MultiUserDemographics.Add(this);
						this._PermissionID = value.PermissionID;
					}
					else
					{
						this._PermissionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_MultiUserDemographic", Storage="_UserInfo", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.MultiUserDemographics.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.MultiUserDemographics.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._HospitalDemographicInfo = default(EntityRef<HospitalDemographicInfo>);
			this._Permission = default(EntityRef<Permission>);
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MultiUserHospital")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MultiUserHospital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MultiUserHospitalID;
		
		private System.Nullable<int> _HospitalInfoID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _PermissionID;
		
		private bool _IsCollapse;
		
		private string _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private EntityRef<HospitalInfo> _HospitalInfo;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<UserInfo> _UserInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMultiUserHospitalIDChanging(int value);
    partial void OnMultiUserHospitalIDChanged();
    partial void OnHospitalInfoIDChanging(System.Nullable<int> value);
    partial void OnHospitalInfoIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnPermissionIDChanging(System.Nullable<int> value);
    partial void OnPermissionIDChanged();
    partial void OnIsCollapseChanging(bool value);
    partial void OnIsCollapseChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public MultiUserHospital()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiUserHospitalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MultiUserHospitalID
		{
			get
			{
				return this._MultiUserHospitalID;
			}
			set
			{
				if ((this._MultiUserHospitalID != value))
				{
					this.OnMultiUserHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._MultiUserHospitalID = value;
					this.SendPropertyChanged("MultiUserHospitalID");
					this.OnMultiUserHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalInfoID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> HospitalInfoID
		{
			get
			{
				return this._HospitalInfoID;
			}
			set
			{
				if ((this._HospitalInfoID != value))
				{
					if (this._HospitalInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHospitalInfoIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalInfoID = value;
					this.SendPropertyChanged("HospitalInfoID");
					this.OnHospitalInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCollapse", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsCollapse
		{
			get
			{
				return this._IsCollapse;
			}
			set
			{
				if ((this._IsCollapse != value))
				{
					this.OnIsCollapseChanging(value);
					this.SendPropertyChanging();
					this._IsCollapse = value;
					this.SendPropertyChanged("IsCollapse");
					this.OnIsCollapseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalInfo_MultiUserHospital", Storage="_HospitalInfo", ThisKey="HospitalInfoID", OtherKey="HospitalInfoID", IsForeignKey=true, DeleteRule="CASCADE")]
		public HospitalInfo HospitalInfo
		{
			get
			{
				return this._HospitalInfo.Entity;
			}
			set
			{
				HospitalInfo previousValue = this._HospitalInfo.Entity;
				if (((previousValue != value) 
							|| (this._HospitalInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HospitalInfo.Entity = null;
						previousValue.MultiUserHospitals.Remove(this);
					}
					this._HospitalInfo.Entity = value;
					if ((value != null))
					{
						value.MultiUserHospitals.Add(this);
						this._HospitalInfoID = value.HospitalInfoID;
					}
					else
					{
						this._HospitalInfoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HospitalInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_MultiUserHospital", Storage="_Permission", ThisKey="PermissionID", OtherKey="PermissionID", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.MultiUserHospitals.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.MultiUserHospitals.Add(this);
						this._PermissionID = value.PermissionID;
					}
					else
					{
						this._PermissionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_MultiUserHospital", Storage="_UserInfo", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.MultiUserHospitals.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.MultiUserHospitals.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._HospitalInfo = default(EntityRef<HospitalInfo>);
			this._Permission = default(EntityRef<Permission>);
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NationalDatabase")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NationalDatabase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NationalDatabaseID;
		
		private int _NationalDatabaseCategoryID;
		
		private string _Type;
		
		private int _TypeValueID;
		
		private string _ValueText;
		
		private System.Nullable<double> _Value;
		
		private EntityRef<NationalDatabaseCategory> _NationalDatabaseCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNationalDatabaseIDChanging(int value);
    partial void OnNationalDatabaseIDChanged();
    partial void OnNationalDatabaseCategoryIDChanging(int value);
    partial void OnNationalDatabaseCategoryIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnTypeValueIDChanging(int value);
    partial void OnTypeValueIDChanged();
    partial void OnValueTextChanging(string value);
    partial void OnValueTextChanged();
    partial void OnValueChanging(System.Nullable<double> value);
    partial void OnValueChanged();
    #endregion
		
		public NationalDatabase()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalDatabaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int NationalDatabaseID
		{
			get
			{
				return this._NationalDatabaseID;
			}
			set
			{
				if ((this._NationalDatabaseID != value))
				{
					this.OnNationalDatabaseIDChanging(value);
					this.SendPropertyChanging();
					this._NationalDatabaseID = value;
					this.SendPropertyChanged("NationalDatabaseID");
					this.OnNationalDatabaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalDatabaseCategoryID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int NationalDatabaseCategoryID
		{
			get
			{
				return this._NationalDatabaseCategoryID;
			}
			set
			{
				if ((this._NationalDatabaseCategoryID != value))
				{
					if (this._NationalDatabaseCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNationalDatabaseCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._NationalDatabaseCategoryID = value;
					this.SendPropertyChanged("NationalDatabaseCategoryID");
					this.OnNationalDatabaseCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeValueID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int TypeValueID
		{
			get
			{
				return this._TypeValueID;
			}
			set
			{
				if ((this._TypeValueID != value))
				{
					this.OnTypeValueIDChanging(value);
					this.SendPropertyChanging();
					this._TypeValueID = value;
					this.SendPropertyChanged("TypeValueID");
					this.OnTypeValueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueText", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ValueText
		{
			get
			{
				return this._ValueText;
			}
			set
			{
				if ((this._ValueText != value))
				{
					this.OnValueTextChanging(value);
					this.SendPropertyChanging();
					this._ValueText = value;
					this.SendPropertyChanged("ValueText");
					this.OnValueTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NationalDatabaseCategory_NationalDatabase", Storage="_NationalDatabaseCategory", ThisKey="NationalDatabaseCategoryID", OtherKey="NationalDatabaseCategoryID", IsForeignKey=true)]
		public NationalDatabaseCategory NationalDatabaseCategory
		{
			get
			{
				return this._NationalDatabaseCategory.Entity;
			}
			set
			{
				NationalDatabaseCategory previousValue = this._NationalDatabaseCategory.Entity;
				if (((previousValue != value) 
							|| (this._NationalDatabaseCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NationalDatabaseCategory.Entity = null;
						previousValue.NationalDatabases.Remove(this);
					}
					this._NationalDatabaseCategory.Entity = value;
					if ((value != null))
					{
						value.NationalDatabases.Add(this);
						this._NationalDatabaseCategoryID = value.NationalDatabaseCategoryID;
					}
					else
					{
						this._NationalDatabaseCategoryID = default(int);
					}
					this.SendPropertyChanged("NationalDatabaseCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._NationalDatabaseCategory = default(EntityRef<NationalDatabaseCategory>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NationalDatabaseCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NationalDatabaseCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NationalDatabaseCategoryID;
		
		private string _NationalDatabaseCategoryName;
		
		private EntitySet<NationalDatabase> _NationalDatabases;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNationalDatabaseCategoryIDChanging(int value);
    partial void OnNationalDatabaseCategoryIDChanged();
    partial void OnNationalDatabaseCategoryNameChanging(string value);
    partial void OnNationalDatabaseCategoryNameChanged();
    #endregion
		
		public NationalDatabaseCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalDatabaseCategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int NationalDatabaseCategoryID
		{
			get
			{
				return this._NationalDatabaseCategoryID;
			}
			set
			{
				if ((this._NationalDatabaseCategoryID != value))
				{
					this.OnNationalDatabaseCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._NationalDatabaseCategoryID = value;
					this.SendPropertyChanged("NationalDatabaseCategoryID");
					this.OnNationalDatabaseCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalDatabaseCategoryName", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NationalDatabaseCategoryName
		{
			get
			{
				return this._NationalDatabaseCategoryName;
			}
			set
			{
				if ((this._NationalDatabaseCategoryName != value))
				{
					this.OnNationalDatabaseCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._NationalDatabaseCategoryName = value;
					this.SendPropertyChanged("NationalDatabaseCategoryName");
					this.OnNationalDatabaseCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NationalDatabaseCategory_NationalDatabase", Storage="_NationalDatabases", ThisKey="NationalDatabaseCategoryID", OtherKey="NationalDatabaseCategoryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<NationalDatabase> NationalDatabases
		{
			get
			{
				if ((this.serializing 
							&& (this._NationalDatabases.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NationalDatabases;
			}
			set
			{
				this._NationalDatabases.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NationalDatabases(NationalDatabase entity)
		{
			this.SendPropertyChanging();
			entity.NationalDatabaseCategory = this;
		}
		
		private void detach_NationalDatabases(NationalDatabase entity)
		{
			this.SendPropertyChanging();
			entity.NationalDatabaseCategory = null;
		}
		
		private void Initialize()
		{
			this._NationalDatabases = new EntitySet<NationalDatabase>(new Action<NationalDatabase>(this.attach_NationalDatabases), new Action<NationalDatabase>(this.detach_NationalDatabases));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notification")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationID;
		
		private int _UserID;
		
		private System.Nullable<int> _SenderID;
		
		private string _Subject;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationIDChanging(int value);
    partial void OnNotificationIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnSenderIDChanging(System.Nullable<int> value);
    partial void OnSenderIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    #endregion
		
		public Notification()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int NotificationID
		{
			get
			{
				return this._NotificationID;
			}
			set
			{
				if ((this._NotificationID != value))
				{
					this.OnNotificationIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationID = value;
					this.SendPropertyChanged("NotificationID");
					this.OnNotificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NursePDADetail")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NursePDADetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NurserDetailID;
		
		private int _NurseID;
		
		private int _CategoryGroupID;
		
		private int _TypeID;
		
		private System.Nullable<int> _ResourceRequirementID;
		
		private string _ResourceText;
		
		private int _LastLocationID;
		
		private string _LastLocationDate;
		
		private string _LastLocationTime;
		
		private string _LastLocationText;
		
		private int _LocationID;
		
		private string _LocationDate;
		
		private string _LocationTime;
		
		private string _LocationText;
		
		private int _ActivityID;
		
		private string _ActivityDate;
		
		private string _ActivityTime;
		
		private string _ActivityText;
		
		private System.Nullable<int> _SubActivityID;
		
		private string _SubActivityDate;
		
		private string _SubActivityTime;
		
		private string _SubActivityText;
		
		private string _CognitiveCategory;
		
		private bool _IsErrorInResourceRequirement;
		
		private System.Nullable<bool> _IsErrorInCognitiveCategory;
		
		private bool _IsErrorInLastLocation;
		
		private bool _IsErrorInLocation;
		
		private bool _IsErrorInActivity;
		
		private bool _IsErrorInSubActivity;
		
		private bool _IsErrorExist;
		
		private bool _IsActive;
		
		private System.Nullable<bool> _IsActiveError;
		
		private string _ActiveError1;
		
		private string _ActiveError2;
		
		private string _ActiveError3;
		
		private string _ActiveError4;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private EntityRef<NursePDAInfo> _NursePDAInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNurserDetailIDChanging(int value);
    partial void OnNurserDetailIDChanged();
    partial void OnNurseIDChanging(int value);
    partial void OnNurseIDChanged();
    partial void OnCategoryGroupIDChanging(int value);
    partial void OnCategoryGroupIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnResourceRequirementIDChanging(System.Nullable<int> value);
    partial void OnResourceRequirementIDChanged();
    partial void OnResourceTextChanging(string value);
    partial void OnResourceTextChanged();
    partial void OnLastLocationIDChanging(int value);
    partial void OnLastLocationIDChanged();
    partial void OnLastLocationDateChanging(string value);
    partial void OnLastLocationDateChanged();
    partial void OnLastLocationTimeChanging(string value);
    partial void OnLastLocationTimeChanged();
    partial void OnLastLocationTextChanging(string value);
    partial void OnLastLocationTextChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnLocationDateChanging(string value);
    partial void OnLocationDateChanged();
    partial void OnLocationTimeChanging(string value);
    partial void OnLocationTimeChanged();
    partial void OnLocationTextChanging(string value);
    partial void OnLocationTextChanged();
    partial void OnActivityIDChanging(int value);
    partial void OnActivityIDChanged();
    partial void OnActivityDateChanging(string value);
    partial void OnActivityDateChanged();
    partial void OnActivityTimeChanging(string value);
    partial void OnActivityTimeChanged();
    partial void OnActivityTextChanging(string value);
    partial void OnActivityTextChanged();
    partial void OnSubActivityIDChanging(System.Nullable<int> value);
    partial void OnSubActivityIDChanged();
    partial void OnSubActivityDateChanging(string value);
    partial void OnSubActivityDateChanged();
    partial void OnSubActivityTimeChanging(string value);
    partial void OnSubActivityTimeChanged();
    partial void OnSubActivityTextChanging(string value);
    partial void OnSubActivityTextChanged();
    partial void OnCognitiveCategoryChanging(string value);
    partial void OnCognitiveCategoryChanged();
    partial void OnIsErrorInResourceRequirementChanging(bool value);
    partial void OnIsErrorInResourceRequirementChanged();
    partial void OnIsErrorInCognitiveCategoryChanging(System.Nullable<bool> value);
    partial void OnIsErrorInCognitiveCategoryChanged();
    partial void OnIsErrorInLastLocationChanging(bool value);
    partial void OnIsErrorInLastLocationChanged();
    partial void OnIsErrorInLocationChanging(bool value);
    partial void OnIsErrorInLocationChanged();
    partial void OnIsErrorInActivityChanging(bool value);
    partial void OnIsErrorInActivityChanged();
    partial void OnIsErrorInSubActivityChanging(bool value);
    partial void OnIsErrorInSubActivityChanged();
    partial void OnIsErrorExistChanging(bool value);
    partial void OnIsErrorExistChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsActiveErrorChanging(System.Nullable<bool> value);
    partial void OnIsActiveErrorChanged();
    partial void OnActiveError1Changing(string value);
    partial void OnActiveError1Changed();
    partial void OnActiveError2Changing(string value);
    partial void OnActiveError2Changed();
    partial void OnActiveError3Changing(string value);
    partial void OnActiveError3Changed();
    partial void OnActiveError4Changing(string value);
    partial void OnActiveError4Changed();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public NursePDADetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NurserDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int NurserDetailID
		{
			get
			{
				return this._NurserDetailID;
			}
			set
			{
				if ((this._NurserDetailID != value))
				{
					this.OnNurserDetailIDChanging(value);
					this.SendPropertyChanging();
					this._NurserDetailID = value;
					this.SendPropertyChanged("NurserDetailID");
					this.OnNurserDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NurseID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int NurseID
		{
			get
			{
				return this._NurseID;
			}
			set
			{
				if ((this._NurseID != value))
				{
					if (this._NursePDAInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNurseIDChanging(value);
					this.SendPropertyChanging();
					this._NurseID = value;
					this.SendPropertyChanged("NurseID");
					this.OnNurseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryGroupID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CategoryGroupID
		{
			get
			{
				return this._CategoryGroupID;
			}
			set
			{
				if ((this._CategoryGroupID != value))
				{
					this.OnCategoryGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryGroupID = value;
					this.SendPropertyChanged("CategoryGroupID");
					this.OnCategoryGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceRequirementID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> ResourceRequirementID
		{
			get
			{
				return this._ResourceRequirementID;
			}
			set
			{
				if ((this._ResourceRequirementID != value))
				{
					this.OnResourceRequirementIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceRequirementID = value;
					this.SendPropertyChanged("ResourceRequirementID");
					this.OnResourceRequirementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceText", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ResourceText
		{
			get
			{
				return this._ResourceText;
			}
			set
			{
				if ((this._ResourceText != value))
				{
					this.OnResourceTextChanging(value);
					this.SendPropertyChanging();
					this._ResourceText = value;
					this.SendPropertyChanged("ResourceText");
					this.OnResourceTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLocationID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int LastLocationID
		{
			get
			{
				return this._LastLocationID;
			}
			set
			{
				if ((this._LastLocationID != value))
				{
					this.OnLastLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LastLocationID = value;
					this.SendPropertyChanged("LastLocationID");
					this.OnLastLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLocationDate", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string LastLocationDate
		{
			get
			{
				return this._LastLocationDate;
			}
			set
			{
				if ((this._LastLocationDate != value))
				{
					this.OnLastLocationDateChanging(value);
					this.SendPropertyChanging();
					this._LastLocationDate = value;
					this.SendPropertyChanged("LastLocationDate");
					this.OnLastLocationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLocationTime", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string LastLocationTime
		{
			get
			{
				return this._LastLocationTime;
			}
			set
			{
				if ((this._LastLocationTime != value))
				{
					this.OnLastLocationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLocationTime = value;
					this.SendPropertyChanged("LastLocationTime");
					this.OnLastLocationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLocationText", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string LastLocationText
		{
			get
			{
				return this._LastLocationText;
			}
			set
			{
				if ((this._LastLocationText != value))
				{
					this.OnLastLocationTextChanging(value);
					this.SendPropertyChanging();
					this._LastLocationText = value;
					this.SendPropertyChanged("LastLocationText");
					this.OnLastLocationTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationDate", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string LocationDate
		{
			get
			{
				return this._LocationDate;
			}
			set
			{
				if ((this._LocationDate != value))
				{
					this.OnLocationDateChanging(value);
					this.SendPropertyChanging();
					this._LocationDate = value;
					this.SendPropertyChanged("LocationDate");
					this.OnLocationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationTime", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string LocationTime
		{
			get
			{
				return this._LocationTime;
			}
			set
			{
				if ((this._LocationTime != value))
				{
					this.OnLocationTimeChanging(value);
					this.SendPropertyChanging();
					this._LocationTime = value;
					this.SendPropertyChanged("LocationTime");
					this.OnLocationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationText", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string LocationText
		{
			get
			{
				return this._LocationText;
			}
			set
			{
				if ((this._LocationText != value))
				{
					this.OnLocationTextChanging(value);
					this.SendPropertyChanging();
					this._LocationText = value;
					this.SendPropertyChanged("LocationText");
					this.OnLocationTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityDate", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string ActivityDate
		{
			get
			{
				return this._ActivityDate;
			}
			set
			{
				if ((this._ActivityDate != value))
				{
					this.OnActivityDateChanging(value);
					this.SendPropertyChanging();
					this._ActivityDate = value;
					this.SendPropertyChanged("ActivityDate");
					this.OnActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityTime", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string ActivityTime
		{
			get
			{
				return this._ActivityTime;
			}
			set
			{
				if ((this._ActivityTime != value))
				{
					this.OnActivityTimeChanging(value);
					this.SendPropertyChanging();
					this._ActivityTime = value;
					this.SendPropertyChanged("ActivityTime");
					this.OnActivityTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityText", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string ActivityText
		{
			get
			{
				return this._ActivityText;
			}
			set
			{
				if ((this._ActivityText != value))
				{
					this.OnActivityTextChanging(value);
					this.SendPropertyChanging();
					this._ActivityText = value;
					this.SendPropertyChanged("ActivityText");
					this.OnActivityTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubActivityID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> SubActivityID
		{
			get
			{
				return this._SubActivityID;
			}
			set
			{
				if ((this._SubActivityID != value))
				{
					this.OnSubActivityIDChanging(value);
					this.SendPropertyChanging();
					this._SubActivityID = value;
					this.SendPropertyChanged("SubActivityID");
					this.OnSubActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubActivityDate", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string SubActivityDate
		{
			get
			{
				return this._SubActivityDate;
			}
			set
			{
				if ((this._SubActivityDate != value))
				{
					this.OnSubActivityDateChanging(value);
					this.SendPropertyChanging();
					this._SubActivityDate = value;
					this.SendPropertyChanged("SubActivityDate");
					this.OnSubActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubActivityTime", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string SubActivityTime
		{
			get
			{
				return this._SubActivityTime;
			}
			set
			{
				if ((this._SubActivityTime != value))
				{
					this.OnSubActivityTimeChanging(value);
					this.SendPropertyChanging();
					this._SubActivityTime = value;
					this.SendPropertyChanged("SubActivityTime");
					this.OnSubActivityTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubActivityText", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string SubActivityText
		{
			get
			{
				return this._SubActivityText;
			}
			set
			{
				if ((this._SubActivityText != value))
				{
					this.OnSubActivityTextChanging(value);
					this.SendPropertyChanging();
					this._SubActivityText = value;
					this.SendPropertyChanged("SubActivityText");
					this.OnSubActivityTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CognitiveCategory", DbType="NVarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string CognitiveCategory
		{
			get
			{
				return this._CognitiveCategory;
			}
			set
			{
				if ((this._CognitiveCategory != value))
				{
					this.OnCognitiveCategoryChanging(value);
					this.SendPropertyChanging();
					this._CognitiveCategory = value;
					this.SendPropertyChanged("CognitiveCategory");
					this.OnCognitiveCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInResourceRequirement", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public bool IsErrorInResourceRequirement
		{
			get
			{
				return this._IsErrorInResourceRequirement;
			}
			set
			{
				if ((this._IsErrorInResourceRequirement != value))
				{
					this.OnIsErrorInResourceRequirementChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInResourceRequirement = value;
					this.SendPropertyChanged("IsErrorInResourceRequirement");
					this.OnIsErrorInResourceRequirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInCognitiveCategory", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<bool> IsErrorInCognitiveCategory
		{
			get
			{
				return this._IsErrorInCognitiveCategory;
			}
			set
			{
				if ((this._IsErrorInCognitiveCategory != value))
				{
					this.OnIsErrorInCognitiveCategoryChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInCognitiveCategory = value;
					this.SendPropertyChanged("IsErrorInCognitiveCategory");
					this.OnIsErrorInCognitiveCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInLastLocation", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public bool IsErrorInLastLocation
		{
			get
			{
				return this._IsErrorInLastLocation;
			}
			set
			{
				if ((this._IsErrorInLastLocation != value))
				{
					this.OnIsErrorInLastLocationChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInLastLocation = value;
					this.SendPropertyChanged("IsErrorInLastLocation");
					this.OnIsErrorInLastLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInLocation", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public bool IsErrorInLocation
		{
			get
			{
				return this._IsErrorInLocation;
			}
			set
			{
				if ((this._IsErrorInLocation != value))
				{
					this.OnIsErrorInLocationChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInLocation = value;
					this.SendPropertyChanged("IsErrorInLocation");
					this.OnIsErrorInLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInActivity", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public bool IsErrorInActivity
		{
			get
			{
				return this._IsErrorInActivity;
			}
			set
			{
				if ((this._IsErrorInActivity != value))
				{
					this.OnIsErrorInActivityChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInActivity = value;
					this.SendPropertyChanged("IsErrorInActivity");
					this.OnIsErrorInActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInSubActivity", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public bool IsErrorInSubActivity
		{
			get
			{
				return this._IsErrorInSubActivity;
			}
			set
			{
				if ((this._IsErrorInSubActivity != value))
				{
					this.OnIsErrorInSubActivityChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInSubActivity = value;
					this.SendPropertyChanged("IsErrorInSubActivity");
					this.OnIsErrorInSubActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorExist", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public bool IsErrorExist
		{
			get
			{
				return this._IsErrorExist;
			}
			set
			{
				if ((this._IsErrorExist != value))
				{
					this.OnIsErrorExistChanging(value);
					this.SendPropertyChanging();
					this._IsErrorExist = value;
					this.SendPropertyChanged("IsErrorExist");
					this.OnIsErrorExistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveError", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<bool> IsActiveError
		{
			get
			{
				return this._IsActiveError;
			}
			set
			{
				if ((this._IsActiveError != value))
				{
					this.OnIsActiveErrorChanging(value);
					this.SendPropertyChanging();
					this._IsActiveError = value;
					this.SendPropertyChanged("IsActiveError");
					this.OnIsActiveErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveError1", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public string ActiveError1
		{
			get
			{
				return this._ActiveError1;
			}
			set
			{
				if ((this._ActiveError1 != value))
				{
					this.OnActiveError1Changing(value);
					this.SendPropertyChanging();
					this._ActiveError1 = value;
					this.SendPropertyChanged("ActiveError1");
					this.OnActiveError1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveError2", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public string ActiveError2
		{
			get
			{
				return this._ActiveError2;
			}
			set
			{
				if ((this._ActiveError2 != value))
				{
					this.OnActiveError2Changing(value);
					this.SendPropertyChanging();
					this._ActiveError2 = value;
					this.SendPropertyChanged("ActiveError2");
					this.OnActiveError2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveError3", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public string ActiveError3
		{
			get
			{
				return this._ActiveError3;
			}
			set
			{
				if ((this._ActiveError3 != value))
				{
					this.OnActiveError3Changing(value);
					this.SendPropertyChanging();
					this._ActiveError3 = value;
					this.SendPropertyChanged("ActiveError3");
					this.OnActiveError3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveError4", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public string ActiveError4
		{
			get
			{
				return this._ActiveError4;
			}
			set
			{
				if ((this._ActiveError4 != value))
				{
					this.OnActiveError4Changing(value);
					this.SendPropertyChanging();
					this._ActiveError4 = value;
					this.SendPropertyChanged("ActiveError4");
					this.OnActiveError4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43)]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NursePDAInfo_NursePDADetail", Storage="_NursePDAInfo", ThisKey="NurseID", OtherKey="NurseID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NursePDAInfo NursePDAInfo
		{
			get
			{
				return this._NursePDAInfo.Entity;
			}
			set
			{
				NursePDAInfo previousValue = this._NursePDAInfo.Entity;
				if (((previousValue != value) 
							|| (this._NursePDAInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NursePDAInfo.Entity = null;
						previousValue.NursePDADetails.Remove(this);
					}
					this._NursePDAInfo.Entity = value;
					if ((value != null))
					{
						value.NursePDADetails.Add(this);
						this._NurseID = value.NurseID;
					}
					else
					{
						this._NurseID = default(int);
					}
					this.SendPropertyChanged("NursePDAInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._NursePDAInfo = default(EntityRef<NursePDAInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NursePDAInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NursePDAInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NurseID;
		
		private int _HospitalDemographicID;
		
		private System.Nullable<int> _HospitalUploadID;
		
		private string _NurseName;
		
		private string _Year;
		
		private string _Month;
		
		private int _PatientsPerNurse;
		
		private string _ConfigName;
		
		private string _PDAUserName;
		
		private string _FileRefference;
		
		private string _UnitName;
		
		private string _SoftwareVersion;
		
		private bool _IsCollapseYear;
		
		private bool _IsCollapseMonth;
		
		private bool _IsAdminCollapseYear;
		
		private bool _IsAdminCollapseMonth;
		
		private bool _IsErrorInNurseName;
		
		private bool _IsErrorInPatientsPerNurse;
		
		private bool _IsErrorInConfigName;
		
		private bool _IsErrorInPDAUserName;
		
		private bool _IsErrorInUnitName;
		
		private bool _IsErrorExist;
		
		private bool _IsErrorInDetailData;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private EntitySet<NursePDADetail> _NursePDADetails;
		
		private EntitySet<NursePDASpecialType> _NursePDASpecialTypes;
		
		private EntityRef<HospitalDemographicInfo> _HospitalDemographicInfo;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNurseIDChanging(int value);
    partial void OnNurseIDChanged();
    partial void OnHospitalDemographicIDChanging(int value);
    partial void OnHospitalDemographicIDChanged();
    partial void OnHospitalUploadIDChanging(System.Nullable<int> value);
    partial void OnHospitalUploadIDChanged();
    partial void OnNurseNameChanging(string value);
    partial void OnNurseNameChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnPatientsPerNurseChanging(int value);
    partial void OnPatientsPerNurseChanged();
    partial void OnConfigNameChanging(string value);
    partial void OnConfigNameChanged();
    partial void OnPDAUserNameChanging(string value);
    partial void OnPDAUserNameChanged();
    partial void OnFileRefferenceChanging(string value);
    partial void OnFileRefferenceChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnSoftwareVersionChanging(string value);
    partial void OnSoftwareVersionChanged();
    partial void OnIsCollapseYearChanging(bool value);
    partial void OnIsCollapseYearChanged();
    partial void OnIsCollapseMonthChanging(bool value);
    partial void OnIsCollapseMonthChanged();
    partial void OnIsAdminCollapseYearChanging(bool value);
    partial void OnIsAdminCollapseYearChanged();
    partial void OnIsAdminCollapseMonthChanging(bool value);
    partial void OnIsAdminCollapseMonthChanged();
    partial void OnIsErrorInNurseNameChanging(bool value);
    partial void OnIsErrorInNurseNameChanged();
    partial void OnIsErrorInPatientsPerNurseChanging(bool value);
    partial void OnIsErrorInPatientsPerNurseChanged();
    partial void OnIsErrorInConfigNameChanging(bool value);
    partial void OnIsErrorInConfigNameChanged();
    partial void OnIsErrorInPDAUserNameChanging(bool value);
    partial void OnIsErrorInPDAUserNameChanged();
    partial void OnIsErrorInUnitNameChanging(bool value);
    partial void OnIsErrorInUnitNameChanged();
    partial void OnIsErrorExistChanging(bool value);
    partial void OnIsErrorExistChanged();
    partial void OnIsErrorInDetailDataChanging(bool value);
    partial void OnIsErrorInDetailDataChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public NursePDAInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NurseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int NurseID
		{
			get
			{
				return this._NurseID;
			}
			set
			{
				if ((this._NurseID != value))
				{
					this.OnNurseIDChanging(value);
					this.SendPropertyChanging();
					this._NurseID = value;
					this.SendPropertyChanged("NurseID");
					this.OnNurseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalDemographicID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int HospitalDemographicID
		{
			get
			{
				return this._HospitalDemographicID;
			}
			set
			{
				if ((this._HospitalDemographicID != value))
				{
					if (this._HospitalDemographicInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHospitalDemographicIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalDemographicID = value;
					this.SendPropertyChanged("HospitalDemographicID");
					this.OnHospitalDemographicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalUploadID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> HospitalUploadID
		{
			get
			{
				return this._HospitalUploadID;
			}
			set
			{
				if ((this._HospitalUploadID != value))
				{
					this.OnHospitalUploadIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalUploadID = value;
					this.SendPropertyChanged("HospitalUploadID");
					this.OnHospitalUploadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NurseName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string NurseName
		{
			get
			{
				return this._NurseName;
			}
			set
			{
				if ((this._NurseName != value))
				{
					this.OnNurseNameChanging(value);
					this.SendPropertyChanging();
					this._NurseName = value;
					this.SendPropertyChanged("NurseName");
					this.OnNurseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientsPerNurse", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int PatientsPerNurse
		{
			get
			{
				return this._PatientsPerNurse;
			}
			set
			{
				if ((this._PatientsPerNurse != value))
				{
					this.OnPatientsPerNurseChanging(value);
					this.SendPropertyChanging();
					this._PatientsPerNurse = value;
					this.SendPropertyChanged("PatientsPerNurse");
					this.OnPatientsPerNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ConfigName
		{
			get
			{
				return this._ConfigName;
			}
			set
			{
				if ((this._ConfigName != value))
				{
					this.OnConfigNameChanging(value);
					this.SendPropertyChanging();
					this._ConfigName = value;
					this.SendPropertyChanged("ConfigName");
					this.OnConfigNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDAUserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string PDAUserName
		{
			get
			{
				return this._PDAUserName;
			}
			set
			{
				if ((this._PDAUserName != value))
				{
					this.OnPDAUserNameChanging(value);
					this.SendPropertyChanging();
					this._PDAUserName = value;
					this.SendPropertyChanged("PDAUserName");
					this.OnPDAUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileRefference", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string FileRefference
		{
			get
			{
				return this._FileRefference;
			}
			set
			{
				if ((this._FileRefference != value))
				{
					this.OnFileRefferenceChanging(value);
					this.SendPropertyChanging();
					this._FileRefference = value;
					this.SendPropertyChanged("FileRefference");
					this.OnFileRefferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoftwareVersion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string SoftwareVersion
		{
			get
			{
				return this._SoftwareVersion;
			}
			set
			{
				if ((this._SoftwareVersion != value))
				{
					this.OnSoftwareVersionChanging(value);
					this.SendPropertyChanging();
					this._SoftwareVersion = value;
					this.SendPropertyChanged("SoftwareVersion");
					this.OnSoftwareVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCollapseYear", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool IsCollapseYear
		{
			get
			{
				return this._IsCollapseYear;
			}
			set
			{
				if ((this._IsCollapseYear != value))
				{
					this.OnIsCollapseYearChanging(value);
					this.SendPropertyChanging();
					this._IsCollapseYear = value;
					this.SendPropertyChanged("IsCollapseYear");
					this.OnIsCollapseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCollapseMonth", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsCollapseMonth
		{
			get
			{
				return this._IsCollapseMonth;
			}
			set
			{
				if ((this._IsCollapseMonth != value))
				{
					this.OnIsCollapseMonthChanging(value);
					this.SendPropertyChanging();
					this._IsCollapseMonth = value;
					this.SendPropertyChanged("IsCollapseMonth");
					this.OnIsCollapseMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdminCollapseYear", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public bool IsAdminCollapseYear
		{
			get
			{
				return this._IsAdminCollapseYear;
			}
			set
			{
				if ((this._IsAdminCollapseYear != value))
				{
					this.OnIsAdminCollapseYearChanging(value);
					this.SendPropertyChanging();
					this._IsAdminCollapseYear = value;
					this.SendPropertyChanged("IsAdminCollapseYear");
					this.OnIsAdminCollapseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdminCollapseMonth", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool IsAdminCollapseMonth
		{
			get
			{
				return this._IsAdminCollapseMonth;
			}
			set
			{
				if ((this._IsAdminCollapseMonth != value))
				{
					this.OnIsAdminCollapseMonthChanging(value);
					this.SendPropertyChanging();
					this._IsAdminCollapseMonth = value;
					this.SendPropertyChanged("IsAdminCollapseMonth");
					this.OnIsAdminCollapseMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInNurseName", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public bool IsErrorInNurseName
		{
			get
			{
				return this._IsErrorInNurseName;
			}
			set
			{
				if ((this._IsErrorInNurseName != value))
				{
					this.OnIsErrorInNurseNameChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInNurseName = value;
					this.SendPropertyChanged("IsErrorInNurseName");
					this.OnIsErrorInNurseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInPatientsPerNurse", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public bool IsErrorInPatientsPerNurse
		{
			get
			{
				return this._IsErrorInPatientsPerNurse;
			}
			set
			{
				if ((this._IsErrorInPatientsPerNurse != value))
				{
					this.OnIsErrorInPatientsPerNurseChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInPatientsPerNurse = value;
					this.SendPropertyChanged("IsErrorInPatientsPerNurse");
					this.OnIsErrorInPatientsPerNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInConfigName", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public bool IsErrorInConfigName
		{
			get
			{
				return this._IsErrorInConfigName;
			}
			set
			{
				if ((this._IsErrorInConfigName != value))
				{
					this.OnIsErrorInConfigNameChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInConfigName = value;
					this.SendPropertyChanged("IsErrorInConfigName");
					this.OnIsErrorInConfigNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInPDAUserName", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public bool IsErrorInPDAUserName
		{
			get
			{
				return this._IsErrorInPDAUserName;
			}
			set
			{
				if ((this._IsErrorInPDAUserName != value))
				{
					this.OnIsErrorInPDAUserNameChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInPDAUserName = value;
					this.SendPropertyChanged("IsErrorInPDAUserName");
					this.OnIsErrorInPDAUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInUnitName", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public bool IsErrorInUnitName
		{
			get
			{
				return this._IsErrorInUnitName;
			}
			set
			{
				if ((this._IsErrorInUnitName != value))
				{
					this.OnIsErrorInUnitNameChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInUnitName = value;
					this.SendPropertyChanged("IsErrorInUnitName");
					this.OnIsErrorInUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorExist", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public bool IsErrorExist
		{
			get
			{
				return this._IsErrorExist;
			}
			set
			{
				if ((this._IsErrorExist != value))
				{
					this.OnIsErrorExistChanging(value);
					this.SendPropertyChanging();
					this._IsErrorExist = value;
					this.SendPropertyChanged("IsErrorExist");
					this.OnIsErrorExistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsErrorInDetailData", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public bool IsErrorInDetailData
		{
			get
			{
				return this._IsErrorInDetailData;
			}
			set
			{
				if ((this._IsErrorInDetailData != value))
				{
					this.OnIsErrorInDetailDataChanging(value);
					this.SendPropertyChanging();
					this._IsErrorInDetailData = value;
					this.SendPropertyChanged("IsErrorInDetailData");
					this.OnIsErrorInDetailDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NursePDAInfo_NursePDADetail", Storage="_NursePDADetails", ThisKey="NurseID", OtherKey="NurseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<NursePDADetail> NursePDADetails
		{
			get
			{
				if ((this.serializing 
							&& (this._NursePDADetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NursePDADetails;
			}
			set
			{
				this._NursePDADetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NursePDAInfo_NursePDASpecialType", Storage="_NursePDASpecialTypes", ThisKey="NurseID", OtherKey="NurseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<NursePDASpecialType> NursePDASpecialTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._NursePDASpecialTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NursePDASpecialTypes;
			}
			set
			{
				this._NursePDASpecialTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HospitalDemographicInfo_NursePDAInfo", Storage="_HospitalDemographicInfo", ThisKey="HospitalDemographicID", OtherKey="HospitalDemographicID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HospitalDemographicInfo HospitalDemographicInfo
		{
			get
			{
				return this._HospitalDemographicInfo.Entity;
			}
			set
			{
				HospitalDemographicInfo previousValue = this._HospitalDemographicInfo.Entity;
				if (((previousValue != value) 
							|| (this._HospitalDemographicInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HospitalDemographicInfo.Entity = null;
						previousValue.NursePDAInfos.Remove(this);
					}
					this._HospitalDemographicInfo.Entity = value;
					if ((value != null))
					{
						value.NursePDAInfos.Add(this);
						this._HospitalDemographicID = value.HospitalDemographicID;
					}
					else
					{
						this._HospitalDemographicID = default(int);
					}
					this.SendPropertyChanged("HospitalDemographicInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NursePDADetails(NursePDADetail entity)
		{
			this.SendPropertyChanging();
			entity.NursePDAInfo = this;
		}
		
		private void detach_NursePDADetails(NursePDADetail entity)
		{
			this.SendPropertyChanging();
			entity.NursePDAInfo = null;
		}
		
		private void attach_NursePDASpecialTypes(NursePDASpecialType entity)
		{
			this.SendPropertyChanging();
			entity.NursePDAInfo = this;
		}
		
		private void detach_NursePDASpecialTypes(NursePDASpecialType entity)
		{
			this.SendPropertyChanging();
			entity.NursePDAInfo = null;
		}
		
		private void Initialize()
		{
			this._NursePDADetails = new EntitySet<NursePDADetail>(new Action<NursePDADetail>(this.attach_NursePDADetails), new Action<NursePDADetail>(this.detach_NursePDADetails));
			this._NursePDASpecialTypes = new EntitySet<NursePDASpecialType>(new Action<NursePDASpecialType>(this.attach_NursePDASpecialTypes), new Action<NursePDASpecialType>(this.detach_NursePDASpecialTypes));
			this._HospitalDemographicInfo = default(EntityRef<HospitalDemographicInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NursePDASpecialType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NursePDASpecialType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpecialTypeID;
		
		private System.Nullable<int> _NurseID;
		
		private string _SpecialCategory;
		
		private string _SpecialActivity;
		
		private string _Date;
		
		private string _Time;
		
		private EntityRef<NursePDAInfo> _NursePDAInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialTypeIDChanging(int value);
    partial void OnSpecialTypeIDChanged();
    partial void OnNurseIDChanging(System.Nullable<int> value);
    partial void OnNurseIDChanged();
    partial void OnSpecialCategoryChanging(string value);
    partial void OnSpecialCategoryChanged();
    partial void OnSpecialActivityChanging(string value);
    partial void OnSpecialActivityChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public NursePDASpecialType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SpecialTypeID
		{
			get
			{
				return this._SpecialTypeID;
			}
			set
			{
				if ((this._SpecialTypeID != value))
				{
					this.OnSpecialTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialTypeID = value;
					this.SendPropertyChanged("SpecialTypeID");
					this.OnSpecialTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NurseID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> NurseID
		{
			get
			{
				return this._NurseID;
			}
			set
			{
				if ((this._NurseID != value))
				{
					if (this._NursePDAInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNurseIDChanging(value);
					this.SendPropertyChanging();
					this._NurseID = value;
					this.SendPropertyChanged("NurseID");
					this.OnNurseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialCategory", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string SpecialCategory
		{
			get
			{
				return this._SpecialCategory;
			}
			set
			{
				if ((this._SpecialCategory != value))
				{
					this.OnSpecialCategoryChanging(value);
					this.SendPropertyChanging();
					this._SpecialCategory = value;
					this.SendPropertyChanged("SpecialCategory");
					this.OnSpecialCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialActivity", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string SpecialActivity
		{
			get
			{
				return this._SpecialActivity;
			}
			set
			{
				if ((this._SpecialActivity != value))
				{
					this.OnSpecialActivityChanging(value);
					this.SendPropertyChanging();
					this._SpecialActivity = value;
					this.SendPropertyChanged("SpecialActivity");
					this.OnSpecialActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NursePDAInfo_NursePDASpecialType", Storage="_NursePDAInfo", ThisKey="NurseID", OtherKey="NurseID", IsForeignKey=true)]
		public NursePDAInfo NursePDAInfo
		{
			get
			{
				return this._NursePDAInfo.Entity;
			}
			set
			{
				NursePDAInfo previousValue = this._NursePDAInfo.Entity;
				if (((previousValue != value) 
							|| (this._NursePDAInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NursePDAInfo.Entity = null;
						previousValue.NursePDASpecialTypes.Remove(this);
					}
					this._NursePDAInfo.Entity = value;
					if ((value != null))
					{
						value.NursePDASpecialTypes.Add(this);
						this._NurseID = value.NurseID;
					}
					else
					{
						this._NurseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NursePDAInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._NursePDAInfo = default(EntityRef<NursePDAInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OwnerShipType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OwnerShipType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OwnerShipTypeID;
		
		private string _OwnerShipTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOwnerShipTypeIDChanging(int value);
    partial void OnOwnerShipTypeIDChanged();
    partial void OnOwnerShipTypeNameChanging(string value);
    partial void OnOwnerShipTypeNameChanged();
    #endregion
		
		public OwnerShipType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerShipTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int OwnerShipTypeID
		{
			get
			{
				return this._OwnerShipTypeID;
			}
			set
			{
				if ((this._OwnerShipTypeID != value))
				{
					this.OnOwnerShipTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerShipTypeID = value;
					this.SendPropertyChanged("OwnerShipTypeID");
					this.OnOwnerShipTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerShipTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string OwnerShipTypeName
		{
			get
			{
				return this._OwnerShipTypeName;
			}
			set
			{
				if ((this._OwnerShipTypeName != value))
				{
					this.OnOwnerShipTypeNameChanging(value);
					this.SendPropertyChanging();
					this._OwnerShipTypeName = value;
					this.SendPropertyChanged("OwnerShipTypeName");
					this.OnOwnerShipTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PermissionID;
		
		private string _Permission1;
		
		private bool _IsActive;
		
		private EntitySet<MultiUserDemographic> _MultiUserDemographics;
		
		private EntitySet<MultiUserHospital> _MultiUserHospitals;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIDChanging(int value);
    partial void OnPermissionIDChanged();
    partial void OnPermission1Changing(string value);
    partial void OnPermission1Changed();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Permission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Permission", Storage="_Permission1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Permission1
		{
			get
			{
				return this._Permission1;
			}
			set
			{
				if ((this._Permission1 != value))
				{
					this.OnPermission1Changing(value);
					this.SendPropertyChanging();
					this._Permission1 = value;
					this.SendPropertyChanged("Permission1");
					this.OnPermission1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_MultiUserDemographic", Storage="_MultiUserDemographics", ThisKey="PermissionID", OtherKey="PermissionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<MultiUserDemographic> MultiUserDemographics
		{
			get
			{
				if ((this.serializing 
							&& (this._MultiUserDemographics.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MultiUserDemographics;
			}
			set
			{
				this._MultiUserDemographics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_MultiUserHospital", Storage="_MultiUserHospitals", ThisKey="PermissionID", OtherKey="PermissionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<MultiUserHospital> MultiUserHospitals
		{
			get
			{
				if ((this.serializing 
							&& (this._MultiUserHospitals.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MultiUserHospitals;
			}
			set
			{
				this._MultiUserHospitals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MultiUserDemographics(MultiUserDemographic entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_MultiUserDemographics(MultiUserDemographic entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void attach_MultiUserHospitals(MultiUserHospital entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_MultiUserHospitals(MultiUserHospital entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void Initialize()
		{
			this._MultiUserDemographics = new EntitySet<MultiUserDemographic>(new Action<MultiUserDemographic>(this.attach_MultiUserDemographics), new Action<MultiUserDemographic>(this.detach_MultiUserDemographics));
			this._MultiUserHospitals = new EntitySet<MultiUserHospital>(new Action<MultiUserHospital>(this.attach_MultiUserHospitals), new Action<MultiUserHospital>(this.detach_MultiUserHospitals));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PharmacyType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PharmacyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PharmacyTypeID;
		
		private string _PharmacyName;
		
		private System.Nullable<bool> _IsActive;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _DeletedBy;
		
		private System.Nullable<bool> _DeletedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPharmacyTypeIDChanging(int value);
    partial void OnPharmacyTypeIDChanged();
    partial void OnPharmacyNameChanging(string value);
    partial void OnPharmacyNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateChanging(System.Nullable<bool> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public PharmacyType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PharmacyTypeID
		{
			get
			{
				return this._PharmacyTypeID;
			}
			set
			{
				if ((this._PharmacyTypeID != value))
				{
					this.OnPharmacyTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PharmacyTypeID = value;
					this.SendPropertyChanged("PharmacyTypeID");
					this.OnPharmacyTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyName", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string PharmacyName
		{
			get
			{
				return this._PharmacyName;
			}
			set
			{
				if ((this._PharmacyName != value))
				{
					this.OnPharmacyNameChanging(value);
					this.SendPropertyChanging();
					this._PharmacyName = value;
					this.SendPropertyChanged("PharmacyName");
					this.OnPharmacyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfileType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProfileType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfileTypeID;
		
		private string _ProfileName;
		
		private string _AuthorName;
		
		private string _Description;
		
		private string _Type;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<CategoryProfile> _CategoryProfiles;
		
		private EntitySet<ProfileUser> _ProfileUsers;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileTypeIDChanging(int value);
    partial void OnProfileTypeIDChanged();
    partial void OnProfileNameChanging(string value);
    partial void OnProfileNameChanged();
    partial void OnAuthorNameChanging(string value);
    partial void OnAuthorNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ProfileType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProfileTypeID
		{
			get
			{
				return this._ProfileTypeID;
			}
			set
			{
				if ((this._ProfileTypeID != value))
				{
					this.OnProfileTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileTypeID = value;
					this.SendPropertyChanged("ProfileTypeID");
					this.OnProfileTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileName", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ProfileName
		{
			get
			{
				return this._ProfileName;
			}
			set
			{
				if ((this._ProfileName != value))
				{
					this.OnProfileNameChanging(value);
					this.SendPropertyChanging();
					this._ProfileName = value;
					this.SendPropertyChanged("ProfileName");
					this.OnProfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="VarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this.OnAuthorNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorName = value;
					this.SendPropertyChanged("AuthorName");
					this.OnAuthorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfileType_CategoryProfile", Storage="_CategoryProfiles", ThisKey="ProfileTypeID", OtherKey="ProfileTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CategoryProfile> CategoryProfiles
		{
			get
			{
				if ((this.serializing 
							&& (this._CategoryProfiles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CategoryProfiles;
			}
			set
			{
				this._CategoryProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfileType_ProfileUser", Storage="_ProfileUsers", ThisKey="ProfileTypeID", OtherKey="ProfileTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<ProfileUser> ProfileUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._ProfileUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProfileUsers;
			}
			set
			{
				this._ProfileUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CategoryProfiles(CategoryProfile entity)
		{
			this.SendPropertyChanging();
			entity.ProfileType = this;
		}
		
		private void detach_CategoryProfiles(CategoryProfile entity)
		{
			this.SendPropertyChanging();
			entity.ProfileType = null;
		}
		
		private void attach_ProfileUsers(ProfileUser entity)
		{
			this.SendPropertyChanging();
			entity.ProfileType = this;
		}
		
		private void detach_ProfileUsers(ProfileUser entity)
		{
			this.SendPropertyChanging();
			entity.ProfileType = null;
		}
		
		private void Initialize()
		{
			this._CategoryProfiles = new EntitySet<CategoryProfile>(new Action<CategoryProfile>(this.attach_CategoryProfiles), new Action<CategoryProfile>(this.detach_CategoryProfiles));
			this._ProfileUsers = new EntitySet<ProfileUser>(new Action<ProfileUser>(this.attach_ProfileUsers), new Action<ProfileUser>(this.detach_ProfileUsers));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfileUser")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProfileUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfileUserID;
		
		private int _ProfileTypeID;
		
		private int _UserID;
		
		private System.Nullable<bool> _IsShared;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntityRef<ProfileType> _ProfileType;
		
		private EntityRef<UserInfo> _UserInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileUserIDChanging(int value);
    partial void OnProfileUserIDChanged();
    partial void OnProfileTypeIDChanging(int value);
    partial void OnProfileTypeIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIsSharedChanging(System.Nullable<bool> value);
    partial void OnIsSharedChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public ProfileUser()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProfileUserID
		{
			get
			{
				return this._ProfileUserID;
			}
			set
			{
				if ((this._ProfileUserID != value))
				{
					this.OnProfileUserIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileUserID = value;
					this.SendPropertyChanged("ProfileUserID");
					this.OnProfileUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProfileTypeID
		{
			get
			{
				return this._ProfileTypeID;
			}
			set
			{
				if ((this._ProfileTypeID != value))
				{
					if (this._ProfileType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfileTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileTypeID = value;
					this.SendPropertyChanged("ProfileTypeID");
					this.OnProfileTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShared", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsShared
		{
			get
			{
				return this._IsShared;
			}
			set
			{
				if ((this._IsShared != value))
				{
					this.OnIsSharedChanging(value);
					this.SendPropertyChanging();
					this._IsShared = value;
					this.SendPropertyChanged("IsShared");
					this.OnIsSharedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfileType_ProfileUser", Storage="_ProfileType", ThisKey="ProfileTypeID", OtherKey="ProfileTypeID", IsForeignKey=true)]
		public ProfileType ProfileType
		{
			get
			{
				return this._ProfileType.Entity;
			}
			set
			{
				ProfileType previousValue = this._ProfileType.Entity;
				if (((previousValue != value) 
							|| (this._ProfileType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProfileType.Entity = null;
						previousValue.ProfileUsers.Remove(this);
					}
					this._ProfileType.Entity = value;
					if ((value != null))
					{
						value.ProfileUsers.Add(this);
						this._ProfileTypeID = value.ProfileTypeID;
					}
					else
					{
						this._ProfileTypeID = default(int);
					}
					this.SendPropertyChanged("ProfileType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_ProfileUser", Storage="_UserInfo", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.ProfileUsers.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.ProfileUsers.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ProfileType = default(EntityRef<ProfileType>);
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestForTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RequestForType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestID;
		
		private System.Nullable<int> _UserID;
		
		private string _Type;
		
		private string _Value;
		
		private string _HospitalName;
		
		private string _HospitalUnitName;
		
		private string _MessageDescription;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnHospitalNameChanging(string value);
    partial void OnHospitalNameChanged();
    partial void OnHospitalUnitNameChanging(string value);
    partial void OnHospitalUnitNameChanged();
    partial void OnMessageDescriptionChanging(string value);
    partial void OnMessageDescriptionChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    #endregion
		
		public RequestForType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalName", DbType="VarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string HospitalName
		{
			get
			{
				return this._HospitalName;
			}
			set
			{
				if ((this._HospitalName != value))
				{
					this.OnHospitalNameChanging(value);
					this.SendPropertyChanging();
					this._HospitalName = value;
					this.SendPropertyChanged("HospitalName");
					this.OnHospitalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalUnitName", DbType="VarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string HospitalUnitName
		{
			get
			{
				return this._HospitalUnitName;
			}
			set
			{
				if ((this._HospitalUnitName != value))
				{
					this.OnHospitalUnitNameChanging(value);
					this.SendPropertyChanging();
					this._HospitalUnitName = value;
					this.SendPropertyChanged("HospitalUnitName");
					this.OnHospitalUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageDescription", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string MessageDescription
		{
			get
			{
				return this._MessageDescription;
			}
			set
			{
				if ((this._MessageDescription != value))
				{
					this.OnMessageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MessageDescription = value;
					this.SendPropertyChanged("MessageDescription");
					this.OnMessageDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceRequirement")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ResourceRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceRequirementID;
		
		private string _ResourceRequirement1;
		
		private int _ValidateID;
		
		private bool _IsActive;
		
		private EntityRef<ValidateFileField> _ValidateFileField;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceRequirementIDChanging(int value);
    partial void OnResourceRequirementIDChanged();
    partial void OnResourceRequirement1Changing(string value);
    partial void OnResourceRequirement1Changed();
    partial void OnValidateIDChanging(int value);
    partial void OnValidateIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ResourceRequirement()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceRequirementID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceRequirementID
		{
			get
			{
				return this._ResourceRequirementID;
			}
			set
			{
				if ((this._ResourceRequirementID != value))
				{
					this.OnResourceRequirementIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceRequirementID = value;
					this.SendPropertyChanged("ResourceRequirementID");
					this.OnResourceRequirementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ResourceRequirement", Storage="_ResourceRequirement1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ResourceRequirement1
		{
			get
			{
				return this._ResourceRequirement1;
			}
			set
			{
				if ((this._ResourceRequirement1 != value))
				{
					this.OnResourceRequirement1Changing(value);
					this.SendPropertyChanging();
					this._ResourceRequirement1 = value;
					this.SendPropertyChanged("ResourceRequirement1");
					this.OnResourceRequirement1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ValidateID
		{
			get
			{
				return this._ValidateID;
			}
			set
			{
				if ((this._ValidateID != value))
				{
					if (this._ValidateFileField.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidateIDChanging(value);
					this.SendPropertyChanging();
					this._ValidateID = value;
					this.SendPropertyChanged("ValidateID");
					this.OnValidateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidateFileField_ResourceRequirement", Storage="_ValidateFileField", ThisKey="ValidateID", OtherKey="ValidateID", IsForeignKey=true)]
		public ValidateFileField ValidateFileField
		{
			get
			{
				return this._ValidateFileField.Entity;
			}
			set
			{
				ValidateFileField previousValue = this._ValidateFileField.Entity;
				if (((previousValue != value) 
							|| (this._ValidateFileField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidateFileField.Entity = null;
						previousValue.ResourceRequirements.Remove(this);
					}
					this._ValidateFileField.Entity = value;
					if ((value != null))
					{
						value.ResourceRequirements.Add(this);
						this._ValidateID = value.ValidateID;
					}
					else
					{
						this._ValidateID = default(int);
					}
					this.SendPropertyChanged("ValidateFileField");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ValidateFileField = default(EntityRef<ValidateFileField>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateID;
		
		private int _CountryID;
		
		private string _StateName;
		
		private string _StateAbbreviation;
		
		private bool _IsActive;
		
		private EntitySet<HospitalInfo> _HospitalInfos;
		
		private EntityRef<Country> _Country;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnStateAbbreviationChanging(string value);
    partial void OnStateAbbreviationChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public State()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateAbbreviation", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string StateAbbreviation
		{
			get
			{
				return this._StateAbbreviation;
			}
			set
			{
				if ((this._StateAbbreviation != value))
				{
					this.OnStateAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._StateAbbreviation = value;
					this.SendPropertyChanged("StateAbbreviation");
					this.OnStateAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_HospitalInfo", Storage="_HospitalInfos", ThisKey="StateID", OtherKey="StateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<HospitalInfo> HospitalInfos
		{
			get
			{
				if ((this.serializing 
							&& (this._HospitalInfos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._HospitalInfos;
			}
			set
			{
				this._HospitalInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_State", Storage="_Country", ThisKey="CountryID", OtherKey="CountryID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.States.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.States.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					{
						this._CountryID = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HospitalInfos(HospitalInfo entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_HospitalInfos(HospitalInfo entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
		
		private void Initialize()
		{
			this._HospitalInfos = new EntitySet<HospitalInfo>(new Action<HospitalInfo>(this.attach_HospitalInfos), new Action<HospitalInfo>(this.detach_HospitalInfos));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubActivities")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SubActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubActivityID;
		
		private string _SubActivity1;
		
		private int _ValidateID;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubActivityIDChanging(int value);
    partial void OnSubActivityIDChanged();
    partial void OnSubActivity1Changing(string value);
    partial void OnSubActivity1Changed();
    partial void OnValidateIDChanging(int value);
    partial void OnValidateIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public SubActivity()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubActivityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SubActivityID
		{
			get
			{
				return this._SubActivityID;
			}
			set
			{
				if ((this._SubActivityID != value))
				{
					this.OnSubActivityIDChanging(value);
					this.SendPropertyChanging();
					this._SubActivityID = value;
					this.SendPropertyChanged("SubActivityID");
					this.OnSubActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SubActivity", Storage="_SubActivity1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SubActivity1
		{
			get
			{
				return this._SubActivity1;
			}
			set
			{
				if ((this._SubActivity1 != value))
				{
					this.OnSubActivity1Changing(value);
					this.SendPropertyChanging();
					this._SubActivity1 = value;
					this.SendPropertyChanged("SubActivity1");
					this.OnSubActivity1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ValidateID
		{
			get
			{
				return this._ValidateID;
			}
			set
			{
				if ((this._ValidateID != value))
				{
					this.OnValidateIDChanging(value);
					this.SendPropertyChanging();
					this._ValidateID = value;
					this.SendPropertyChanged("ValidateID");
					this.OnValidateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UnitType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UnitTypeID;
		
		private string _UnitTypeName;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private bool _IsDeleted;
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitTypeIDChanging(int value);
    partial void OnUnitTypeIDChanged();
    partial void OnUnitTypeNameChanging(string value);
    partial void OnUnitTypeNameChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    #endregion
		
		public UnitType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UnitTypeID
		{
			get
			{
				return this._UnitTypeID;
			}
			set
			{
				if ((this._UnitTypeID != value))
				{
					this.OnUnitTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeID = value;
					this.SendPropertyChanged("UnitTypeID");
					this.OnUnitTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UnitTypeName
		{
			get
			{
				return this._UnitTypeName;
			}
			set
			{
				if ((this._UnitTypeName != value))
				{
					this.OnUnitTypeNameChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeName = value;
					this.SendPropertyChanged("UnitTypeName");
					this.OnUnitTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserTypeID;
		
		private string _UserType1;
		
		private bool _IsActive;
		
		private EntitySet<UserInfo> _UserInfos;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserTypeIDChanging(int value);
    partial void OnUserTypeIDChanged();
    partial void OnUserType1Changing(string value);
    partial void OnUserType1Changed();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public UserType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserType", Storage="_UserType1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UserType1
		{
			get
			{
				return this._UserType1;
			}
			set
			{
				if ((this._UserType1 != value))
				{
					this.OnUserType1Changing(value);
					this.SendPropertyChanging();
					this._UserType1 = value;
					this.SendPropertyChanged("UserType1");
					this.OnUserType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_UserInfo", Storage="_UserInfos", ThisKey="UserTypeID", OtherKey="UserTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<UserInfo> UserInfos
		{
			get
			{
				if ((this.serializing 
							&& (this._UserInfos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserInfos;
			}
			set
			{
				this._UserInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserInfos(UserInfo entity)
		{
			this.SendPropertyChanging();
			entity.UserType = this;
		}
		
		private void detach_UserInfos(UserInfo entity)
		{
			this.SendPropertyChanging();
			entity.UserType = null;
		}
		
		private void Initialize()
		{
			this._UserInfos = new EntitySet<UserInfo>(new Action<UserInfo>(this.attach_UserInfos), new Action<UserInfo>(this.detach_UserInfos));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ValidateFileFields")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ValidateFileField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ValidateID;
		
		private string _ConfigurationName;
		
		private System.Nullable<bool> _IsUseLastLocation;
		
		private System.Nullable<bool> _IsUseLocation;
		
		private System.Nullable<bool> _IsUseActivity;
		
		private System.Nullable<bool> _IsUseSubActivity;
		
		private System.Nullable<bool> _IsUseType;
		
		private System.Nullable<bool> _IsUseDefaultCategory;
		
		private System.Nullable<bool> _IsUseResourceRequirement;
		
		private System.Nullable<bool> _IsUseCognitiveCategory;
		
		private EntitySet<ResourceRequirement> _ResourceRequirements;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnValidateIDChanging(int value);
    partial void OnValidateIDChanged();
    partial void OnConfigurationNameChanging(string value);
    partial void OnConfigurationNameChanged();
    partial void OnIsUseLastLocationChanging(System.Nullable<bool> value);
    partial void OnIsUseLastLocationChanged();
    partial void OnIsUseLocationChanging(System.Nullable<bool> value);
    partial void OnIsUseLocationChanged();
    partial void OnIsUseActivityChanging(System.Nullable<bool> value);
    partial void OnIsUseActivityChanged();
    partial void OnIsUseSubActivityChanging(System.Nullable<bool> value);
    partial void OnIsUseSubActivityChanged();
    partial void OnIsUseTypeChanging(System.Nullable<bool> value);
    partial void OnIsUseTypeChanged();
    partial void OnIsUseDefaultCategoryChanging(System.Nullable<bool> value);
    partial void OnIsUseDefaultCategoryChanged();
    partial void OnIsUseResourceRequirementChanging(System.Nullable<bool> value);
    partial void OnIsUseResourceRequirementChanged();
    partial void OnIsUseCognitiveCategoryChanging(System.Nullable<bool> value);
    partial void OnIsUseCognitiveCategoryChanged();
    #endregion
		
		public ValidateFileField()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ValidateID
		{
			get
			{
				return this._ValidateID;
			}
			set
			{
				if ((this._ValidateID != value))
				{
					this.OnValidateIDChanging(value);
					this.SendPropertyChanging();
					this._ValidateID = value;
					this.SendPropertyChanged("ValidateID");
					this.OnValidateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigurationName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ConfigurationName
		{
			get
			{
				return this._ConfigurationName;
			}
			set
			{
				if ((this._ConfigurationName != value))
				{
					this.OnConfigurationNameChanging(value);
					this.SendPropertyChanging();
					this._ConfigurationName = value;
					this.SendPropertyChanged("ConfigurationName");
					this.OnConfigurationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUseLastLocation", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> IsUseLastLocation
		{
			get
			{
				return this._IsUseLastLocation;
			}
			set
			{
				if ((this._IsUseLastLocation != value))
				{
					this.OnIsUseLastLocationChanging(value);
					this.SendPropertyChanging();
					this._IsUseLastLocation = value;
					this.SendPropertyChanged("IsUseLastLocation");
					this.OnIsUseLastLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUseLocation", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsUseLocation
		{
			get
			{
				return this._IsUseLocation;
			}
			set
			{
				if ((this._IsUseLocation != value))
				{
					this.OnIsUseLocationChanging(value);
					this.SendPropertyChanging();
					this._IsUseLocation = value;
					this.SendPropertyChanged("IsUseLocation");
					this.OnIsUseLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUseActivity", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> IsUseActivity
		{
			get
			{
				return this._IsUseActivity;
			}
			set
			{
				if ((this._IsUseActivity != value))
				{
					this.OnIsUseActivityChanging(value);
					this.SendPropertyChanging();
					this._IsUseActivity = value;
					this.SendPropertyChanged("IsUseActivity");
					this.OnIsUseActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUseSubActivity", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsUseSubActivity
		{
			get
			{
				return this._IsUseSubActivity;
			}
			set
			{
				if ((this._IsUseSubActivity != value))
				{
					this.OnIsUseSubActivityChanging(value);
					this.SendPropertyChanging();
					this._IsUseSubActivity = value;
					this.SendPropertyChanged("IsUseSubActivity");
					this.OnIsUseSubActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUseType", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> IsUseType
		{
			get
			{
				return this._IsUseType;
			}
			set
			{
				if ((this._IsUseType != value))
				{
					this.OnIsUseTypeChanging(value);
					this.SendPropertyChanging();
					this._IsUseType = value;
					this.SendPropertyChanged("IsUseType");
					this.OnIsUseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUseDefaultCategory", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> IsUseDefaultCategory
		{
			get
			{
				return this._IsUseDefaultCategory;
			}
			set
			{
				if ((this._IsUseDefaultCategory != value))
				{
					this.OnIsUseDefaultCategoryChanging(value);
					this.SendPropertyChanging();
					this._IsUseDefaultCategory = value;
					this.SendPropertyChanged("IsUseDefaultCategory");
					this.OnIsUseDefaultCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUseResourceRequirement", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> IsUseResourceRequirement
		{
			get
			{
				return this._IsUseResourceRequirement;
			}
			set
			{
				if ((this._IsUseResourceRequirement != value))
				{
					this.OnIsUseResourceRequirementChanging(value);
					this.SendPropertyChanging();
					this._IsUseResourceRequirement = value;
					this.SendPropertyChanged("IsUseResourceRequirement");
					this.OnIsUseResourceRequirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUseCognitiveCategory", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> IsUseCognitiveCategory
		{
			get
			{
				return this._IsUseCognitiveCategory;
			}
			set
			{
				if ((this._IsUseCognitiveCategory != value))
				{
					this.OnIsUseCognitiveCategoryChanging(value);
					this.SendPropertyChanging();
					this._IsUseCognitiveCategory = value;
					this.SendPropertyChanged("IsUseCognitiveCategory");
					this.OnIsUseCognitiveCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidateFileField_ResourceRequirement", Storage="_ResourceRequirements", ThisKey="ValidateID", OtherKey="ValidateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<ResourceRequirement> ResourceRequirements
		{
			get
			{
				if ((this.serializing 
							&& (this._ResourceRequirements.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ResourceRequirements;
			}
			set
			{
				this._ResourceRequirements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResourceRequirements(ResourceRequirement entity)
		{
			this.SendPropertyChanging();
			entity.ValidateFileField = this;
		}
		
		private void detach_ResourceRequirements(ResourceRequirement entity)
		{
			this.SendPropertyChanging();
			entity.ValidateFileField = null;
		}
		
		private void Initialize()
		{
			this._ResourceRequirements = new EntitySet<ResourceRequirement>(new Action<ResourceRequirement>(this.attach_ResourceRequirements), new Action<ResourceRequirement>(this.detach_ResourceRequirements));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Validation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Validation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ValidationID;
		
		private System.Nullable<int> _LocationID;
		
		private System.Nullable<int> _ActivityID;
		
		private System.Nullable<int> _SubActivityID;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntitySet<CategoryProfile> _CategoryProfiles;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnValidationIDChanging(int value);
    partial void OnValidationIDChanged();
    partial void OnLocationIDChanging(System.Nullable<int> value);
    partial void OnLocationIDChanged();
    partial void OnActivityIDChanging(System.Nullable<int> value);
    partial void OnActivityIDChanged();
    partial void OnSubActivityIDChanging(System.Nullable<int> value);
    partial void OnSubActivityIDChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Validation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ValidationID
		{
			get
			{
				return this._ValidationID;
			}
			set
			{
				if ((this._ValidationID != value))
				{
					this.OnValidationIDChanging(value);
					this.SendPropertyChanging();
					this._ValidationID = value;
					this.SendPropertyChanged("ValidationID");
					this.OnValidationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubActivityID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> SubActivityID
		{
			get
			{
				return this._SubActivityID;
			}
			set
			{
				if ((this._SubActivityID != value))
				{
					this.OnSubActivityIDChanging(value);
					this.SendPropertyChanging();
					this._SubActivityID = value;
					this.SendPropertyChanged("SubActivityID");
					this.OnSubActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Validation_CategoryProfile", Storage="_CategoryProfiles", ThisKey="ValidationID", OtherKey="ValidationID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CategoryProfile> CategoryProfiles
		{
			get
			{
				if ((this.serializing 
							&& (this._CategoryProfiles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CategoryProfiles;
			}
			set
			{
				this._CategoryProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CategoryProfiles(CategoryProfile entity)
		{
			this.SendPropertyChanging();
			entity.Validation = this;
		}
		
		private void detach_CategoryProfiles(CategoryProfile entity)
		{
			this.SendPropertyChanging();
			entity.Validation = null;
		}
		
		private void Initialize()
		{
			this._CategoryProfiles = new EntitySet<CategoryProfile>(new Action<CategoryProfile>(this.attach_CategoryProfiles), new Action<CategoryProfile>(this.detach_CategoryProfiles));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ValueAddedTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ValueAddedType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _TypeName;
		
		private string _Abbreviation;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ValueAddedType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewRequest")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ViewRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestID;
		
		private int _FromUserID;
		
		private int _ToUserID;
		
		private System.Nullable<int> _HospitalID;
		
		private System.Nullable<int> _HospitalDemographicDetailID;
		
		private bool _IsApproved;
		
		private System.Nullable<int> _PermissionId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnFromUserIDChanging(int value);
    partial void OnFromUserIDChanged();
    partial void OnToUserIDChanging(int value);
    partial void OnToUserIDChanged();
    partial void OnHospitalIDChanging(System.Nullable<int> value);
    partial void OnHospitalIDChanged();
    partial void OnHospitalDemographicDetailIDChanging(System.Nullable<int> value);
    partial void OnHospitalDemographicDetailIDChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnPermissionIdChanging(System.Nullable<int> value);
    partial void OnPermissionIdChanged();
    #endregion
		
		public ViewRequest()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUserID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int FromUserID
		{
			get
			{
				return this._FromUserID;
			}
			set
			{
				if ((this._FromUserID != value))
				{
					this.OnFromUserIDChanging(value);
					this.SendPropertyChanging();
					this._FromUserID = value;
					this.SendPropertyChanged("FromUserID");
					this.OnFromUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUserID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ToUserID
		{
			get
			{
				return this._ToUserID;
			}
			set
			{
				if ((this._ToUserID != value))
				{
					this.OnToUserIDChanging(value);
					this.SendPropertyChanging();
					this._ToUserID = value;
					this.SendPropertyChanged("ToUserID");
					this.OnToUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> HospitalID
		{
			get
			{
				return this._HospitalID;
			}
			set
			{
				if ((this._HospitalID != value))
				{
					this.OnHospitalIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalID = value;
					this.SendPropertyChanged("HospitalID");
					this.OnHospitalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalDemographicDetailID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> HospitalDemographicDetailID
		{
			get
			{
				return this._HospitalDemographicDetailID;
			}
			set
			{
				if ((this._HospitalDemographicDetailID != value))
				{
					this.OnHospitalDemographicDetailIDChanging(value);
					this.SendPropertyChanging();
					this._HospitalDemographicDetailID = value;
					this.SendPropertyChanged("HospitalDemographicDetailID");
					this.OnHospitalDemographicDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _UserTypeID;
		
		private string _CompanyName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Password;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _SecurityQuestion;
		
		private string _UserActivationRequest;
		
		private string _SecurityAnswer;
		
		private bool _IsActive;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private string _AccessRequest;
		
		private EntitySet<HospitalInfo> _HospitalInfos;
		
		private EntitySet<MaintainControlState> _MaintainControlStates;
		
		private EntitySet<MultiUserDemographic> _MultiUserDemographics;
		
		private EntitySet<MultiUserHospital> _MultiUserHospitals;
		
		private EntitySet<ProfileUser> _ProfileUsers;
		
		private EntityRef<UserType> _UserType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserTypeIDChanging(int value);
    partial void OnUserTypeIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSecurityQuestionChanging(string value);
    partial void OnSecurityQuestionChanged();
    partial void OnUserActivationRequestChanging(string value);
    partial void OnUserActivationRequestChanged();
    partial void OnSecurityAnswerChanging(string value);
    partial void OnSecurityAnswerChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    partial void OnAccessRequestChanging(string value);
    partial void OnAccessRequestChanged();
    #endregion
		
		public UserInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					if (this._UserType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityQuestion", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string SecurityQuestion
		{
			get
			{
				return this._SecurityQuestion;
			}
			set
			{
				if ((this._SecurityQuestion != value))
				{
					this.OnSecurityQuestionChanging(value);
					this.SendPropertyChanging();
					this._SecurityQuestion = value;
					this.SendPropertyChanged("SecurityQuestion");
					this.OnSecurityQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActivationRequest", DbType="VarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string UserActivationRequest
		{
			get
			{
				return this._UserActivationRequest;
			}
			set
			{
				if ((this._UserActivationRequest != value))
				{
					this.OnUserActivationRequestChanging(value);
					this.SendPropertyChanging();
					this._UserActivationRequest = value;
					this.SendPropertyChanged("UserActivationRequest");
					this.OnUserActivationRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityAnswer", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string SecurityAnswer
		{
			get
			{
				return this._SecurityAnswer;
			}
			set
			{
				if ((this._SecurityAnswer != value))
				{
					this.OnSecurityAnswerChanging(value);
					this.SendPropertyChanging();
					this._SecurityAnswer = value;
					this.SendPropertyChanged("SecurityAnswer");
					this.OnSecurityAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessRequest", DbType="NVarChar(25)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string AccessRequest
		{
			get
			{
				return this._AccessRequest;
			}
			set
			{
				if ((this._AccessRequest != value))
				{
					this.OnAccessRequestChanging(value);
					this.SendPropertyChanging();
					this._AccessRequest = value;
					this.SendPropertyChanged("AccessRequest");
					this.OnAccessRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_HospitalInfo", Storage="_HospitalInfos", ThisKey="UserID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<HospitalInfo> HospitalInfos
		{
			get
			{
				if ((this.serializing 
							&& (this._HospitalInfos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._HospitalInfos;
			}
			set
			{
				this._HospitalInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_MaintainControlState", Storage="_MaintainControlStates", ThisKey="UserID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<MaintainControlState> MaintainControlStates
		{
			get
			{
				if ((this.serializing 
							&& (this._MaintainControlStates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MaintainControlStates;
			}
			set
			{
				this._MaintainControlStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_MultiUserDemographic", Storage="_MultiUserDemographics", ThisKey="UserID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<MultiUserDemographic> MultiUserDemographics
		{
			get
			{
				if ((this.serializing 
							&& (this._MultiUserDemographics.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MultiUserDemographics;
			}
			set
			{
				this._MultiUserDemographics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_MultiUserHospital", Storage="_MultiUserHospitals", ThisKey="UserID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<MultiUserHospital> MultiUserHospitals
		{
			get
			{
				if ((this.serializing 
							&& (this._MultiUserHospitals.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MultiUserHospitals;
			}
			set
			{
				this._MultiUserHospitals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_ProfileUser", Storage="_ProfileUsers", ThisKey="UserID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<ProfileUser> ProfileUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._ProfileUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProfileUsers;
			}
			set
			{
				this._ProfileUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_UserInfo", Storage="_UserType", ThisKey="UserTypeID", OtherKey="UserTypeID", IsForeignKey=true)]
		public UserType UserType
		{
			get
			{
				return this._UserType.Entity;
			}
			set
			{
				UserType previousValue = this._UserType.Entity;
				if (((previousValue != value) 
							|| (this._UserType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserType.Entity = null;
						previousValue.UserInfos.Remove(this);
					}
					this._UserType.Entity = value;
					if ((value != null))
					{
						value.UserInfos.Add(this);
						this._UserTypeID = value.UserTypeID;
					}
					else
					{
						this._UserTypeID = default(int);
					}
					this.SendPropertyChanged("UserType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HospitalInfos(HospitalInfo entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_HospitalInfos(HospitalInfo entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
		
		private void attach_MaintainControlStates(MaintainControlState entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_MaintainControlStates(MaintainControlState entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
		
		private void attach_MultiUserDemographics(MultiUserDemographic entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_MultiUserDemographics(MultiUserDemographic entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
		
		private void attach_MultiUserHospitals(MultiUserHospital entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_MultiUserHospitals(MultiUserHospital entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
		
		private void attach_ProfileUsers(ProfileUser entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_ProfileUsers(ProfileUser entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
		
		private void Initialize()
		{
			this._HospitalInfos = new EntitySet<HospitalInfo>(new Action<HospitalInfo>(this.attach_HospitalInfos), new Action<HospitalInfo>(this.detach_HospitalInfos));
			this._MaintainControlStates = new EntitySet<MaintainControlState>(new Action<MaintainControlState>(this.attach_MaintainControlStates), new Action<MaintainControlState>(this.detach_MaintainControlStates));
			this._MultiUserDemographics = new EntitySet<MultiUserDemographic>(new Action<MultiUserDemographic>(this.attach_MultiUserDemographics), new Action<MultiUserDemographic>(this.detach_MultiUserDemographics));
			this._MultiUserHospitals = new EntitySet<MultiUserHospital>(new Action<MultiUserHospital>(this.attach_MultiUserHospitals), new Action<MultiUserHospital>(this.detach_MultiUserHospitals));
			this._ProfileUsers = new EntitySet<ProfileUser>(new Action<ProfileUser>(this.attach_ProfileUsers), new Action<ProfileUser>(this.detach_ProfileUsers));
			this._UserType = default(EntityRef<UserType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ActivitiesCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivitiesID;
		
		private string _ActivitiesCategory1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivitiesIDChanging(int value);
    partial void OnActivitiesIDChanged();
    partial void OnActivitiesCategory1Changing(string value);
    partial void OnActivitiesCategory1Changed();
    #endregion
		
		public ActivitiesCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivitiesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ActivitiesID
		{
			get
			{
				return this._ActivitiesID;
			}
			set
			{
				if ((this._ActivitiesID != value))
				{
					this.OnActivitiesIDChanging(value);
					this.SendPropertyChanging();
					this._ActivitiesID = value;
					this.SendPropertyChanged("ActivitiesID");
					this.OnActivitiesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ActivitiesCategory", Storage="_ActivitiesCategory1", DbType="VarChar(200)", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ActivitiesCategory1
		{
			get
			{
				return this._ActivitiesCategory1;
			}
			set
			{
				if ((this._ActivitiesCategory1 != value))
				{
					this.OnActivitiesCategory1Changing(value);
					this.SendPropertyChanging();
					this._ActivitiesCategory1 = value;
					this.SendPropertyChanged("ActivitiesCategory1");
					this.OnActivitiesCategory1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GetLocationNameResult
	{
		
		private string _Location;
		
		public GetLocationNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GetLastLocationNameResult
	{
		
		private string _LastLocation;
		
		public GetLastLocationNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLocation", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string LastLocation
		{
			get
			{
				return this._LastLocation;
			}
			set
			{
				if ((this._LastLocation != value))
				{
					this._LastLocation = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GetRenameLastLocationResult
	{
		
		private string _RenameLastLocation;
		
		public GetRenameLastLocationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenameLastLocation", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string RenameLastLocation
		{
			get
			{
				return this._RenameLastLocation;
			}
			set
			{
				if ((this._RenameLastLocation != value))
				{
					this._RenameLastLocation = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
